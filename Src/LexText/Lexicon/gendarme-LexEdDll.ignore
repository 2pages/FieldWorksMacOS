# Gendarme filter file to suppress reporting of defects

#-----------------------------------------------------------------------------------------------
R: Gendarme.Rules.Correctness.DisposableFieldsShouldBeDisposedRule

# Reference only
T: SIL.FieldWorks.XWorks.LexEd.ReversalListener

#-----------------------------------------------------------------------------------------------
R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule

# Added to control and disposed there
M: System.Void SIL.FieldWorks.XWorks.LexEd.FindExampleSentenceDlg::AddConfigurableControls()
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceMultiSlice::AddFinalContextMenuStripOptions(System.Windows.Forms.ContextMenuStrip)
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceMultiSlice::DeleteFromReference(SIL.FieldWorks.FDO.ILexReference)
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceMultiSlice::DeleteReference(SIL.FieldWorks.FDO.ILexReference)
M: System.Void SIL.FieldWorks.XWorks.LexEd.ReversalIndexEntrySlice::FinishInit()
M: System.Void SIL.FieldWorks.XWorks.LexEd.ReversalClerk::DeleteReversalIndex(SIL.FieldWorks.FDO.IReversalIndex)
M: System.Void SIL.FieldWorks.XWorks.LexEd.SwapLexemeWithAllomorphDlg::SetDlgInfo(SIL.FieldWorks.FDO.FdoCache,XCore.Mediator,SIL.FieldWorks.FDO.ILexEntry)
M: System.Void SIL.FieldWorks.XWorks.LexEd.ReversalIndexEntrySlice/ReversalIndexEntrySliceView::ReversalIndexEntrySliceView_RightMouseClickedEvent(SIL.FieldWorks.Common.RootSites.SimpleRootSite,SIL.FieldWorks.Common.RootSites.FwRightMouseClickEventArgs)

# reference only
M: System.Boolean SIL.FieldWorks.XWorks.LexEd.LexEntryMenuHandler::OnDisplayDataTreeInsert(System.Object,XCore.UIItemDisplayProperties&)
M: System.Boolean SIL.FieldWorks.XWorks.LexEd.LexEntryMenuHandler::OnDisplayInsertMediaFile(System.Object,XCore.UIItemDisplayProperties&)
M: System.Void SIL.FieldWorks.XWorks.LexEd.MsaInflectionFeatureListDlgLauncher::HandleChooser()
M: System.Void SIL.FieldWorks.XWorks.LexEd.ReversalIndexEntrySlice/ReversalIndexEntrySliceView::OnLostFocus(System.EventArgs)

# disposed in finally block
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceCollectionLauncher::HandleChooser()
M: SIL.FieldWorks.FDO.ICmObject SIL.FieldWorks.XWorks.LexEd.LexReferenceMultiSlice::GetRootObject(SIL.FieldWorks.FDO.ILexRefType)
M: SIL.FieldWorks.FDO.ICmObject SIL.FieldWorks.XWorks.LexEd.LexReferenceMultiSlice::GetChildObject(SIL.FieldWorks.FDO.ILexRefType)
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferencePairLauncher::HandleChooser()
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceSequenceLauncher::HandleChooser()
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceTreeBranchesLauncher::HandleChooser()
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceTreeRootLauncher::HandleChooser()
M: System.Void SIL.FieldWorks.XWorks.LexEd.LexReferenceUnidirectionalLauncher::HandleChooser()

# GetEnumerator() returns an object
M: System.Collections.IEnumerator SIL.FieldWorks.XWorks.LexEd.ReversalEntryGoSearchEngine/<GetStrings>*::System.Collections.IEnumerable.GetEnumerator()

#-----------------------------------------------------------------------------------------------
R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule

# Reference only
T: SIL.FieldWorks.XWorks.LexEd.HomographResetter
T: SIL.FieldWorks.XWorks.LexEd.GoldEticGuidFixer
