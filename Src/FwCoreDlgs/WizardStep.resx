<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_statusImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAARLSURBVEhLtZXbUxtVGMA3gFRCEkLYLEm4Jc09JJtk
        w6UMaWmhFqVS2jj2EmhYSYSGWBgQLVjaTUK5DAyMjs44U8eZymUcR1v70PGhj775Fh764Oj/oNaHNk+f
        3wm7ke1YdKp+M7+Z5ZzvfD/Od3ZPKAD4X/nPYmFhgVpcXFQwXmO1xq7l8Ll0aWmpRJz+dyEIAkFh6bDR
        Sps6V3G4EtLptBp5WUx58ZCK24+6aKVLk1M61FBhUwGO1SM1YtqLhVTc0e3VK33anNJTBaouBogEx1sR
        i5hKUZlMRlpQ5KAQcxTOUz59JafbVbJa0L3RANqLTYA7IYJ+hC0kr66ukkNSkAVIiQh5Lsw/G2SczDv7
        fLSqnc5VtuigFgsbUw4UmIHsBOeHkbbCgo2NDUX1iD2t5a2/NMX97ThRgZQjpYhMRJ7JmOtMQK8KMzlV
        Bw0NMTOYp5x7gkso8BYE40gntbm5SQQlulFnVhu3AUp+DVw52oOTNFKJlCEFiYjCHQnq1d2GXdUxBixx
        C7ivueQCbBfmTSBhSVBKJ923zO86wZC0QzVv+y2cevUsJpgQFSJJFK7zHK3pNeXUJw3gSFohMO+WC6Io
        CFYTwSQSpnZ2dojgJeaqdymYbYa570JQuyd53HO1/yImkddNjZSzQx2Mpr8+p+kzgXfCBu0Zj0xguGIH
        9fFaqGpjnmB+CjlCbW9vK1BQbphil7lFL3z0QztM3+egFpNR8vvJiTNRTDT3pSKWqkjTrmagAYIzDuha
        bpYJmiYcoHnFANqw4elQMnYH18SQQFFgnAmscCu+gmDl+1ZIfR0EZk/yOJzqTeqi1kc63H73sgd6170y
        gRNbq8VdaU+Y8sPvvPUNFp5DTiP2PwXXuJXQKlsUpB+2QGLHD8yYHbTDVqD5w/DaejMMfOyTCdg5F9Sc
        rQfdqfr88MTIfSx6E7mEcAhTFJiuh1ZC636ZYPYBB7E7fui85YGBT3xw4TYrE7TcdAP9ZiPoXm/M85Px
        b7EgCVKcvOp1iJLa2toqHLJRCC3XZViYe9gqE0zeDcLYlwEYRtF+QRilzKAZdOcseX4qQYpnkSHkCNKE
        kBejTHpNy/ozUQsjBB+Z0ixMPwgdKOhZbQbDiBVqLljz/HSCtIWEVLwBKRRHFMUPDa8K9aCQ8NcK3I9E
        krrH/aXg9Ic+MOHh05fteX7m7f1tkYoXvxvx49+7KlBwCAf1I0KyE9v1k1FgIfFVUCaIfMpC/aQT6IQr
        z78/+ty2IPJ7bG1tjcpms+TeUSLGhJDqMoiSy1uBgiD6OQuN7+Ghjnvy/OzogW1BxMr7AgVkgkjI/VMX
        F8aPEYkBJec+84N53gv6Ke9T/oOxuzhP4uC2PBvi74EkIQvqcCfHsV0/18yzwMz6n8Suj36B4zeQQeTg
        tjwvxMTiTojEIYTvnb/B459CHIkgbYh0R/3z4lKICyQJuVE9CPmPCV5x7O/bQlHUH6QqEd+uky2/AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>