<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ksConflictingSaveText" xml:space="preserve">
    <value>ParaTExt cannot save changes to the lexicon, because they conflict with changes made by another user or application. The conflicting changes will be reverted.</value>
  </data>
  <data name="ksConflictingSaveCaption" xml:space="preserve">
    <value>Cannot Save Lexicon</value>
  </data>
  <data name="ksConnectionLostText" xml:space="preserve">
    <value>There is a problem with the connection to the lexicon.  Usually, this occurs when there is a problem with the FwRemoteDatabaseConnectorService.  Would you like to attempt to reestablish the connection?</value>
  </data>
  <data name="ksConnectionLostCaption" xml:space="preserve">
    <value>Lexicon Connection Lost</value>
  </data>
  <data name="ksOfferToRestoreCaption" xml:space="preserve">
    <value>Problem opening file</value>
  </data>
  <data name="ksOfferToRestoreText" xml:space="preserve">
    <value>There was a problem opening the current version of the file {0}, dated {1}. Would you like to open the automatic backup, {2}, dated {3}?</value>
  </data>
  <data name="ksProjectExistsText1" xml:space="preserve">
    <value>The {0} project already exists.</value>
  </data>
  <data name="ksProjectExistsText2" xml:space="preserve">
    <value>You may overwrite the existing project or select a different name.</value>
  </data>
  <data name="ksWarningCaption" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ksCouldNotConnectText" xml:space="preserve">
    <value>Could not connect to server. Check service is running and that any running firewalls are configured to allow connections to the service.</value>
  </data>
  <data name="ksBackupFileProblemCaption" xml:space="preserve">
    <value>Problem With Backup File</value>
  </data>
  <data name="ksBackupFileProblemText" xml:space="preserve">
    <value>An error occurred. Please select a different file.</value>
  </data>
  <data name="ksRestoreProblemText" xml:space="preserve">
    <value>An error occurred and the project could not be restored.</value>
  </data>
  <data name="ksCannotRestoreLinkedFilesToOriginalLocationCaption" xml:space="preserve">
    <value>Cannot Restore Linked Files</value>
  </data>
  <data name="ksCannotRestoreLinkedFilesToOriginalLocationText" xml:space="preserve">
    <value>ParaTExt cannot restore the linked files to their original location. If you choose to restore the linked files, they will be placed inside the project folder. Do you wish to restore the linked files anyway? </value>
  </data>
  <data name="ksRestoreLinkedFilesInProjectFolderCaption" xml:space="preserve">
    <value>Linked Files Folder</value>
  </data>
  <data name="ksRestoreLinkedFilesInProjectFolderText" xml:space="preserve">
    <value>The Linked Files folder was not previously stored in the project folder. Would you like ParaTExt to restore the linked files within the project folder?</value>
  </data>
  <data name="ksErrorCaption" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ksProjectOpen" xml:space="preserve">
    <value>The selected project is currently open in FieldWorks Language Explorer. The project must be closed in order to associate it with a ParaTExt project.</value>
  </data>
  <data name="ksOther" xml:space="preserve">
    <value>Other</value>
  </data>
</root>