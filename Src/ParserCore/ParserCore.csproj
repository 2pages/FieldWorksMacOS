<Project Sdk="Microsoft.NET.Sdk">
  <Import Condition="'$(WindowsSDK_ExecutablePath_x86)' ==''" Project="$(VCTargetsPath)\Microsoft.Cpp.WindowsSDK.props" />
  <PropertyGroup>
    <UseWindowsForms>true</UseWindowsForms>
    <RootNamespace>SIL.FieldWorks.WordWorks.Parser</RootNamespace>
    <Description>ParserCore</Description>
    <NoWarn>169;219</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="GitVersion.MsBuild" Version="5.10.3" PrivateAssets="All" />
    <PackageReference Include="SIL.LCModel" Version="10.2.0-beta0002" />
    <PackageReference Include="SIL.Machine.Morphology.HermitCrab" Version="1.0.1" />
    <PackageReference Include="SIL.Paradigm.GAFAWSAnalysis" Version="1.0.2" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="ParserCoreStrings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ParserCoreStrings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="ParserCoreStrings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ParserCoreStrings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FwUtils\FwUtils.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\DistFiles\libxample32.so" CopyToOutputDirectory="PreserveNewest" Condition="'$(OS)'=='Unix'" />
    <None Include="..\..\DistFiles\libxample64.so" CopyToOutputDirectory="PreserveNewest" Condition="'$(OS)'=='Unix'" />
    <None Include="..\..\DistFiles\xample32.dll" CopyToOutputDirectory="PreserveNewest" Condition="'$(OS)'=='Windows_NT' AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'!='X64'">
      <Link>xample.dll</Link>
    </None>
    <None Include="..\..\DistFiles\xample64.dll" CopyToOutputDirectory="PreserveNewest" Condition="'$(OS)'=='Windows_NT' AND '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)'=='X64'">
      <Link>xample.dll</Link>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ApplicationXslFiles Include="../Transforms/Application/*.xsl" />
  </ItemGroup>
    <!-- Only Windows has the xsltc tool for compiling XSLs -->
  <PropertyGroup>
    <ApplicationTransformsPath>../Transforms/Application</ApplicationTransformsPath>
  </PropertyGroup>

  <Target Name="BuildXslAssemblies" Inputs="@(ApplicationXslFiles)" Outputs="$(OutputPath)/ApplicationTransforms.dll" BeforeTargets="CoreCompile">
    <!-- Mono doesn't have an XSL compiler so we just put the XSLs in a resource assembly -->
    <Csc TargetType="library" OutputAssembly="$(OutputPath)/ApplicationTransforms.dll" Optimize="true" Platform="AnyCPU" Resources="@(ApplicationXslFiles)" Condition="'$(OS)'=='Unix'" />
    <!-- The WindowsSDK_ExecutablePath_x64 does not contain the xsltc executable, but the x86 path contains one that can build a 64bit assembly -->
    <Exec Command="xsltc.exe /settings:document /platform:$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) /out:$(OutputPath)\ApplicationTransforms.dll $(ApplicationTransformsPath)\FxtM3MorphologySketch.xsl $(ApplicationTransformsPath)\FxtM3ParserToGAFAWS.xsl $(ApplicationTransformsPath)\FxtM3ParserToToXAmpleGrammar.xsl $(ApplicationTransformsPath)\FxtM3ParserToXAmpleADCtl.xsl $(ApplicationTransformsPath)\FxtM3ParserToXAmpleLex.xsl $(ApplicationTransformsPath)\FxtM3ParserToXAmpleWordGrammarDebuggingXSLT.xsl" Condition="'$(OS)'!='Unix'" EnvironmentVariables="PATH=$(WindowsSDK_ExecutablePath_x86.Replace(';','%3B'))" />
  </Target>
</Project>