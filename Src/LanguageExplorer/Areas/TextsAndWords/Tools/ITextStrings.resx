<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ksAcceptEntireAnalysis" xml:space="preserve">
    <value>Accept entire analysis (Ctrl-TAB)</value>
  </data>
  <data name="ksCannotHideField" xml:space="preserve">
    <value>Cannot hide field</value>
  </data>
  <data name="ksConvMapError" xml:space="preserve">
    <value>Conversion map error</value>
    <comment>caption for error message box</comment>
  </data>
  <data name="ksDeleteThisWordform" xml:space="preserve">
    <value>Delete this Wordform</value>
  </data>
  <data name="ksEditThisWordform" xml:space="preserve">
    <value>Edit this Wordform</value>
  </data>
  <data name="ksExportErrorMsg" xml:space="preserve">
    <value>An error occurred while exporting your data.  This is probably a bug in the FieldWorks code. Details: {0}</value>
  </data>
  <data name="ksExtension" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="ksFocusBox_btnBreakPhrase" xml:space="preserve">
    <value>Break phrase into words</value>
  </data>
  <data name="ksFocusBox_btnConfirmChanges" xml:space="preserve">
    <value>Confirm and move next</value>
  </data>
  <data name="ksFocusBox_btnLinkNextWord" xml:space="preserve">
    <value>Make phrase with next word</value>
  </data>
  <data name="ksFocusBox_btnUndoChanges" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="ksFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="ksFT" xml:space="preserve">
    <value>FT </value>
    <comment>short for Free Translation; there is a trailing space</comment>
  </data>
  <data name="ksHidesDependentLinesAlso" xml:space="preserve">
    <value>If you hide this line, some dependent lines will also be hidden.</value>
  </data>
  <data name="ksImport" xml:space="preserve">
    <value>Import</value>
    <comment>button label</comment>
  </data>
  <data name="ksLLFileNotFound" xml:space="preserve">
    <value>LinguaLinks XML file ({0}) not found.</value>
  </data>
  <data name="ksLLImportSucceeded" xml:space="preserve">
    <value>LinguaLinks Import Successful</value>
    <comment>caption for message box</comment>
  </data>
  <data name="ksLT" xml:space="preserve">
    <value>LT </value>
    <comment>short for Literal Translation; there is a trailing space</comment>
  </data>
  <data name="ksNt" xml:space="preserve">
    <value>Nt </value>
    <comment>short for Note; there is a trailing space</comment>
  </data>
  <data name="ksPhaseButton" xml:space="preserve">
    <value>Ph{0} {1}</value>
    <comment>{0} is phase number; {1} is either "Process" or "Import"</comment>
  </data>
  <data name="ksPreparingInterlinear1" xml:space="preserve">
    <value>Preparing Interlinear (Step 1)</value>
  </data>
  <data name="ksPreparingInterlinear2" xml:space="preserve">
    <value>Preparing Interlinear (Step 2)</value>
  </data>
  <data name="ksPreparingInterlinear3" xml:space="preserve">
    <value>Preparing Interlinear (Step 3)</value>
  </data>
  <data name="ksPreparingInterlinear4" xml:space="preserve">
    <value>Preparing Interlinear (Step 4)</value>
  </data>
  <data name="ksPreparingInterlinear5" xml:space="preserve">
    <value>Preparing Interlinear (Step 5)</value>
  </data>
  <data name="ksProcess" xml:space="preserve">
    <value>Process</value>
    <comment>button label</comment>
  </data>
  <data name="ksRedoAddFreeformTranslation" xml:space="preserve">
    <value>Redo insert Freeform Translation</value>
  </data>
  <data name="ksRedoAddLiteralTranslation" xml:space="preserve">
    <value>Redo insert Literal Translation</value>
  </data>
  <data name="ksRedoAddNote" xml:space="preserve">
    <value>Redo insert Note</value>
  </data>
  <data name="ksRedoBreakPhrase" xml:space="preserve">
    <value>Redo Break Phrase into Words</value>
  </data>
  <data name="ksRedoLinkWords" xml:space="preserve">
    <value>Redo Link Words into Phrase</value>
  </data>
  <data name="ksSelectLLFWXMLFile" xml:space="preserve">
    <value>Select the LinguaLinks/FieldWorks XML file to use</value>
    <comment>caption for open file dialog</comment>
  </data>
  <data name="ksSelectLLXMLFile" xml:space="preserve">
    <value>Select the LinguaLinks XML file to use</value>
    <comment>caption for open file dialog</comment>
  </data>
  <data name="ksSuccessLoadingLL" xml:space="preserve">
    <value>Successfully loaded {0} into {1}.{2}Look at {3} for details.</value>
    <comment>{2} is a newline character</comment>
  </data>
  <data name="ksTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ksUndoAddFreeformTranslation" xml:space="preserve">
    <value>Undo insert Free Translation</value>
  </data>
  <data name="ksUndoAddLiteralTranslation" xml:space="preserve">
    <value>Undo insert Literal Translation</value>
  </data>
  <data name="ksUndoAddNote" xml:space="preserve">
    <value>Undo insert Note</value>
  </data>
  <data name="ksUndoBreakPhrase" xml:space="preserve">
    <value>Undo Break Phrase into Words</value>
  </data>
  <data name="ksUndoLinkWords" xml:space="preserve">
    <value>Undo Link Words into Phrase</value>
  </data>
  <data name="ksUnhandledError" xml:space="preserve">
    <value>Unhandled Error</value>
    <comment>caption for message box</comment>
  </data>
  <data name="ksSpecifyConcordanceCriteria" xml:space="preserve">
    <value>Specify Concordance Criteria</value>
  </data>
  <data name="ksConcordance" xml:space="preserve">
    <value>concordance</value>
  </data>
  <data name="ksTexts" xml:space="preserve">
    <value>texts</value>
  </data>
  <data name="ksDeleteFreeTrans" xml:space="preserve">
    <value>Delete Free Translation</value>
  </data>
  <data name="ksDeleteLitTrans" xml:space="preserve">
    <value>Delete Literal Translation</value>
  </data>
  <data name="ksNamelessText" xml:space="preserve">
    <value>(Nameless text)</value>
    <comment>Default text name when exporting a text that has no name</comment>
  </data>
  <data name="ksExportInterlinearizedTexts" xml:space="preserve">
    <value>Export interlinearized texts</value>
  </data>
  <data name="ksSectionHeading" xml:space="preserve">
    <value>{0} (Heading)</value>
  </data>
  <data name="ksInterlinImportErrorPhase1" xml:space="preserve">
    <value>Interlinear XML parsing problem (phase 1): {0}.</value>
  </data>
  <data name="ksInterlinImportErrorPhase2" xml:space="preserve">
    <value>Problem finishing interlinear import (phase 2): {0}.</value>
  </data>
  <data name="ksInterlinImportPhase1of2" xml:space="preserve">
    <value>Phase 1 of 2: Loading interlinear XML data into FieldWorks</value>
  </data>
  <data name="ksInterlinImportPhase2of2" xml:space="preserve">
    <value>Phase 2 of 2: Finishing importing interlinear texts.</value>
  </data>
  <data name="ksImportFailed" xml:space="preserve">
    <value>Import Failed</value>
    <comment>caption to go with ksInterlinImportFailed</comment>
  </data>
  <data name="ksInterlinImportFailed" xml:space="preserve">
    <value>Interlinear Import failed. Are you sure you are importing a file in FLExText interlinear format? Word, Open Office, and Libre Office docs cannot yet be imported.</value>
  </data>
  <data name="ksCannotLaunchX" xml:space="preserve">
    <value>Sorry, could not launch {0}.</value>
    <comment>Interlinear Import instructions link</comment>
  </data>
  <data name="ksInvalidInterlinearFiles" xml:space="preserve">
    <value>Some of the selected file(s) ({0}) may not be valid SFM files. Are you sure that you want to use them?</value>
  </data>
  <data name="ksPossibleInvalidFile" xml:space="preserve">
    <value>Possible Invalid File</value>
  </data>
  <data name="ksSelectInterlinFile" xml:space="preserve">
    <value>Select the SFM file to import</value>
  </data>
  <data name="ksInvalidFileAreYouSure" xml:space="preserve">
    <value>The selected file ({0}) may not be valid. Are you sure that you want to use it?</value>
  </data>
  <data name="ksSelectMapFile" xml:space="preserve">
    <value>Select the mapping file with settings for this import operation</value>
  </data>
  <data name="ksAskSaveSettings" xml:space="preserve">
    <value>Do you want to save your settings for future imports?</value>
  </data>
  <data name="ksErrorReadingSettings" xml:space="preserve">
    <value>Could not load your settings from {0}. The system reported that {1}.</value>
    <comment>First parameter is the name of a settings file. Second is an error message.</comment>
  </data>
  <data name="ksErrorWritingSettings" xml:space="preserve">
    <value>Could not save your settings to {0}. The system reported that {1}.</value>
    <comment>First parameter is the name of a settings file. Second is an error message.</comment>
  </data>
  <data name="ksFldBaseline" xml:space="preserve">
    <value>Baseline</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldComment" xml:space="preserve">
    <value>Comment (of text)</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldFreeTranslation" xml:space="preserve">
    <value>Free Translation</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldId" xml:space="preserve">
    <value>New Text</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldIgnored" xml:space="preserve">
    <value>Don't Import</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldLiteralTranslation" xml:space="preserve">
    <value>Literal Translation</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldNote" xml:space="preserve">
    <value>Note</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldParagraphBreak" xml:space="preserve">
    <value>Paragraph Break</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldReference" xml:space="preserve">
    <value>Reference</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldSource" xml:space="preserve">
    <value>Source (of text)</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksFldTitle" xml:space="preserve">
    <value>Title (of text)</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksSaveSettingsCaption" xml:space="preserve">
    <value>Save Settings?</value>
  </data>
  <data name="ksFldAbbreviation" xml:space="preserve">
    <value>Abbreviation (of text)</value>
    <comment>name for SFM import field; name matches enumeration member name</comment>
  </data>
  <data name="ksMustHaveBaseline" xml:space="preserve">
    <value>At least one field must be specified as containing Baseline text</value>
  </data>
  <data name="ksSfmImportProblem" xml:space="preserve">
    <value>There was a problem with the import. The system reported {0}.</value>
  </data>
  <data name="ksImportAnalysisLangMissing" xml:space="preserve">
    <value> is used in one of your texts as an analysis writing system, but it is not currently part of your FieldWorks project.  Would you like to add it?  
Click "OK" to add it as a analysis writing system.
Click "Cancel" to abort this import.</value>
  </data>
  <data name="ksImportAnalysisLangMissingTitle" xml:space="preserve">
    <value>Text has new analysis writing system</value>
  </data>
  <data name="ksImportVernacLangMissing" xml:space="preserve">
    <value> is used in one of your texts as a vernacular writing system, but it is not currently part of your FieldWorks project.  Would you like to add it?  
Click "OK" to add it as a vernacular writing system.
Click "Cancel" to abort this import.</value>
  </data>
  <data name="ksImportVernacLangMissingTitle" xml:space="preserve">
    <value>Text has new vernacular writing system</value>
  </data>
  <data name="ksImportSFMInterlinNewVernac" xml:space="preserve">
    <value>This import is set to use the writing system {0} as a vernacular writing system, but it is not in your FieldWorks project. Would you like to add it?</value>
  </data>
  <data name="ksImportSFMInterlinNewAnalysis" xml:space="preserve">
    <value>This import is set to use the writing system {0} as an analysis writing system, but it is not in your FieldWorks project. Would you like to add it?</value>
  </data>
  <data name="ksImportSFMInterlinNewWSTitle" xml:space="preserve">
    <value>Add writing system {0} to your FieldWorks project?</value>
  </data>
  <data name="ksImportSFMInterlinTextCount" xml:space="preserve">
    <value>{0} texts will be imported from this SFM file.</value>
  </data>
  <data name="ksAskMergeInterlinearText" xml:space="preserve">
    <value>You already have this interlinear text in your project. Would you like to merge it?</value>
  </data>
  <data name="ksAskMergeInterlinearTextTitle" xml:space="preserve">
    <value>Duplicate text found.</value>
  </data>
  <data name="ksErrorAccessingEncodingConverters" xml:space="preserve">
    <value>Error Accessing Encoding Converters</value>
  </data>
  <data name="ksInterlinearTexts" xml:space="preserve">
    <value>interlinear texts</value>
  </data>
  <data name="ksWordsAndGlosses" xml:space="preserve">
    <value>words and glosses</value>
  </data>
  <data name="ksImportLangMissingTextStartsWith" xml:space="preserve">
    <value>The first words of this text are: </value>
  </data>
  <data name="ExportInterlinear" xml:space="preserve">
    <value>_Export Interlinear...</value>
  </data>
  <data name="Export_Discourse_Chart" xml:space="preserve">
    <value>Export Discourse Chart...</value>
  </data>
  <data name="Break_selected_phrase_into_words" xml:space="preserve">
    <value>Break selected phrase into words.</value>
  </data>
  <data name="ComplexConcControl_NotAllParasParsed" xml:space="preserve">
    <value>Not all paragraphs in {0} could be parsed</value>
    <comment>Warning message in Complex Concordance tool when not all paragraphs in a text could be parsed</comment>
  </data>
  <data name="ComplexConcControl_ResultsMayBeIncomplete" xml:space="preserve">
    <value>Results may be incomplete</value>
  </data>
</root>