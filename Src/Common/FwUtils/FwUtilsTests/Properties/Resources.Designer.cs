//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.FieldWorks.Common.FwUtils.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.FieldWorks.Common.FwUtils.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Pieces&gt;
        ///  &lt;layout class=&quot;LexEntry&quot; type=&quot;Detail&quot; name=&quot;Test1&quot;&gt;
        ///	&lt;part ref=&quot;CitationForm&quot; label=&quot;Test2&quot;/&gt;
        ///	&lt;part ref=&quot;Senses&quot;&gt;
        ///		&lt;part ref=&quot;Synonyms&quot; param=&quot;TestingParam&quot;/&gt;
        ///		&lt;indent&gt;
        ///			&lt;part ref=&quot;Antonymns&quot;/&gt;
        ///		&lt;/indent&gt;
        ///	&lt;/part&gt;
        ///
        ///  &lt;/layout&gt;
        ///  &lt;part ref=&quot;Gloss&quot;/&gt;
        ///  &lt;part id=&quot;blah&quot;/&gt;
        ///  &lt;layout name=&quot;nonsense&quot;/&gt;
        ///  &lt;part ref=&quot;Synonyms&quot;/&gt;
        ///&lt;/Pieces&gt;
        ///.
        /// </summary>
        internal static string CreateOverrideTestData__CreateOverrideTestData_xml {
            get {
                return ResourceManager.GetString("CreateOverrideTestData__CreateOverrideTestData_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;strings inheritPath=&quot;..&quot;&gt;
        ///  &lt;string id=&quot;orange&quot; txt=&quot;orng&quot;/&gt;
        ///&lt;/strings&gt;
        ///.
        /// </summary>
        internal static string food__fruit__citrus__strings_DASH_en_xml {
            get {
                return ResourceManager.GetString("food__fruit__citrus__strings_DASH_en_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!-- used by the include XML tests --&gt;
        ///&lt;food&gt;
        ///  &lt;veggies&gt;
        ///	&lt;thing txt=&quot;tomato&quot;/&gt;
        ///	&lt;thing txt=&quot;cooking banana&quot;/&gt;
        ///  &lt;/veggies&gt;
        ///&lt;/food&gt;
        ///.
        /// </summary>
        internal static string food__fruit__sortOfFruitInclude_xml {
            get {
                return ResourceManager.GetString("food__fruit__sortOfFruitInclude_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;strings&gt;
        ///	&lt;string id=&quot;passion fruit&quot; txt=&quot;pssnfrt&quot;/&gt;
        ///	&lt;string id=&quot;papaya&quot; txt=&quot;ppy&quot;/&gt;
        ///	&lt;!-- this one demonstrates that omiting the txt attribute just means that we should return the id value --&gt;
        ///	&lt;string id=&quot;Banana&quot;/&gt;
        ///	&lt;group id=&quot;InPng&quot;&gt;
        ///		&lt;group id=&quot;InMyYard&quot;&gt;
        ///			&lt;string id=&quot;MyPapaya&quot; txt=&quot;ppy&quot;/&gt;
        ///			&lt;string id=&quot;MyPineapple&quot; txt=&quot;pnppl&quot;/&gt;
        ///		&lt;/group&gt;
        ///	&lt;/group&gt;
        ///&lt;/strings&gt;.
        /// </summary>
        internal static string food__fruit__strings_DASH_en_xml {
            get {
                return ResourceManager.GetString("food__fruit__strings_DASH_en_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!-- used by the include XML tests --&gt;
        ///&lt;food&gt;
        ///  &lt;veggies id=&quot;InPng&quot;&gt;
        ///	&lt;name txt=&quot;aibika&quot;/&gt;
        ///	&lt;name txt=&quot;taro&quot;/&gt;
        ///  &lt;/veggies&gt;
        ///&lt;/food&gt;
        ///.
        /// </summary>
        internal static string food__veggiesInclude_xml {
            get {
                return ResourceManager.GetString("food__veggiesInclude_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!-- used by the include XML tests --&gt;
        ///&lt;food&gt;
        ///  &lt;veggies id=&quot;InPng&quot;&gt;
        ///	&lt;name txt=&quot;aibika&quot;/&gt;
        ///	&lt;name txt=&quot;taro&quot;/&gt;
        ///	&lt;include path=&quot;fruit/sortOfFruitInclude.xml&quot; query = &quot;//thing&quot;/&gt;
        ///  &lt;/veggies&gt;
        ///&lt;/food&gt;
        ///.
        /// </summary>
        internal static string food__veggiesIncludeWithSubInclude_xml {
            get {
                return ResourceManager.GetString("food__veggiesIncludeWithSubInclude_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;layoutInventory&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test1&quot; match=&quot;test1&quot;&gt;
        ///		&lt;group label=&quot;main&quot; ws=&quot;vernacular&quot; rubbish=&quot;nonsense&quot; dummy=&quot;base&quot;&gt;
        ///		&lt;/group&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test2&quot; match=&quot;test2&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexEntry&quot; type=&quot;jtview&quot; name=&quot;Test1&quot; match=&quot;test3&quot; visible=&quot;always&quot; ws=&quot;vernacular&quot;&gt;
        ///		&lt;group label=&quot;main&quot;&gt;
        ///			&lt;part ref=&quot;LexEntry-Jt-Citationform&quot; visible=&quot;always&quot; ws=&quot;vernacular&quot;/&gt;
        ///			&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InventoryBaseTestFiles__Base1Layouts_xml {
            get {
                return ResourceManager.GetString("InventoryBaseTestFiles__Base1Layouts_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;layoutInventory&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test3&quot; match=&quot;test6&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test4&quot; match=&quot;test7&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexEntry&quot; type=&quot;jtview&quot; name=&quot;Test3&quot; match=&quot;test8&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;detail&quot; name=&quot;Test4&quot; match=&quot;test9&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;part class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test3&quot; match=&quot;test10&quot;&gt;
        ///	&lt;/part&gt;
        ///&lt;/layoutInventory&gt;.
        /// </summary>
        internal static string InventoryBaseTestFiles__Base2Layouts_xml {
            get {
                return ResourceManager.GetString("InventoryBaseTestFiles__Base2Layouts_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;layoutInventory&gt;
        ///	&lt;layout class=&quot;LexSense&quot; type=&quot;jtview&quot; name=&quot;Test2&quot; match=&quot;test2D&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexEntry&quot; type=&quot;jtview&quot; name=&quot;Test3D&quot; match=&quot;test3D&quot;&gt;
        ///	&lt;/layout&gt;
        ///	&lt;layout class=&quot;LexEntry&quot; type=&quot;jtview&quot; name=&quot;Test1D&quot; match=&quot;test1D&quot; base=&quot;Test1&quot; visible=&quot;never&quot; dummy=&quot;true&quot;&gt;
        ///		&lt;group label=&quot;main&quot;&gt;
        ///			&lt;part ref=&quot;LexEntry-Jt-Citationform&quot; ws=&quot;technical&quot; part=&quot;default&quot;/&gt;
        ///			&lt;part ref=&quot;LexEntry-Jt-Forms&quot; visible=&quot;always&quot; part=&quot;default&quot;/&gt;
        ///		&lt;/group [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InventoryLaterTestFiles__Override1Layouts_xml {
            get {
                return ResourceManager.GetString("InventoryLaterTestFiles__Override1Layouts_xml", resourceCulture);
            }
        }
    }
}
