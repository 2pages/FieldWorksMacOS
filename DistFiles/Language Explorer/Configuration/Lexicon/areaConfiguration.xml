<?xml version="1.0" encoding="UTF-8"?>
<root>
	<!-- ********************************************************** -->
	<!-- ************************ commands ******************** -->
	<!-- ********************************************************** -->
	<commands>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/commands/*"/>
		<include path="DataTreeInclude.xml" query="window/commands/*"/>
		<command id="CmdGoToEntry" label="_Find lexical entry..." message="GotoLexEntry" icon="goToEntry" shortcut="Ctrl+F">
			<parameters title="Go To Entry" formlabel="Go _To..." okbuttonlabel="_Go"/>
		</command>
		<command id="CmdInsertLexEntry" label="_Entry..." message="InsertItemInVector" shortcut="Ctrl+E" icon="majorEntry">
			<parameters className="LexEntry"/>
		</command>
		<command id="CmdMergeEntry" label="_Merge with entry..." message="MergeEntry">
			<parameters title="Merge Entry" formlabel="_Find:" okbuttonlabel="_Merge"/>
		</command>
		<command id="CmdInsertSense" label="_Sense" message="DataTreeInsert">
			<parameters field="Senses" className="LexSense" ownerClass="LexEntry" recomputeVirtual="LexSense.LexSenseOutline"/>
		</command>
		<command id="CmdInsertSubsense" label="Subsense (in sense)" message="DataTreeInsert">
			<parameters field="Senses" className="LexSense" ownerClass="LexSense" recomputeVirtual="LexSense.LexSenseOutline"/>
		</command>
		<command id="CmdInsertPicture" label="_Picture" message="InsertPicture">
			<parameters field="Pictures" className="LexSense"/>
		</command>
		<command id="CmdInsertMediaFile" label="_Sound or Movie" message="InsertMediaFile">
			<parameters field="MediaFiles" className="LexPronunciation"/>
		</command>
		<command id="CmdDeleteMediaFile" label="Delete This Media Link" message="DeleteMediaFile" icon="Delete">
			<parameters className="CmMedia"/>
		</command>
		<command id="CmdInsertVariant" label="_Variant" message="InsertItemViaBackrefVector">
			<parameters className="LexEntry" fieldName="VariantFormEntryBackRefs" restrictToTool="lexiconEdit"/>
		</command>
		<command id="CmdChangeToComplexForm" label="Lexeme Form has components" message="ConvertEntryIntoComplexForm">
			<parameters className="LexEntry" restrictToTool="lexiconEdit"/>
		</command>
		<command id="CmdChangeToVariant" label="Lexeme Form is a variant" message="ConvertEntryIntoVariant">
			<parameters className="LexEntry" restrictToTool="lexiconEdit"/>
		</command>
		<command id="CmdInsertReversalIndex" label="Reversal Index" message="InsertReversalIndex">
			<parameters className="ReversalIndex"/>
		</command>
		<command id="CmdDeleteReversalIndex" label="Delete Reversal Index" message="DeleteReversalIndex" icon="Delete">
			<parameters className="ReversalIndex"/>
		</command>
		<command id="CmdInsertReversalEntry" label="Reversal Entry" message="InsertItemInVector" icon="reversalEntry">
			<parameters className="ReversalIndexEntry"/>
		</command>
		<command id="CmdGoToReversalEntry" label="_Find reversal entry..." message="GotoReversalEntry" icon="gotoReversalEntry" shortcut="Ctrl+F">
			<parameters title="Go To Entry" formlabel="Go _To..." okbuttonlabel="_Go"/>
		</command>
		<command id="CmdConfigureXmlDocView" label="{0}" message="ConfigureXmlDocView"/>
	</commands>
	<!-- ********************************************************** -->
	<!-- ************************ lists *********************** -->
	<!-- ********************************************************** -->
	<lists>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/lists/*"/>
		<list id="LexicalToolsList"/>
	</lists>
	<!-- ********************************************************** -->
	<!-- ******** controls (dialog or embedded browse view) ******* -->
	<!-- ********************************************************** -->
	<controls>
		<parameters id="guicontrols">
			<guicontrol id="findExampleSentences">
				<dynamicloaderinfo assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.FindExampleSentenceDlg"/>
				<parameters id="senseConcordanceControls">
					<control id="senseInTwficsOccurrenceList">
						<dynamicloaderinfo assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.SenseInTwficsOccurrenceBrowseView"/>
						<parameters id="senseInTwficsOccurrenceList" selectColumn="true" defaultChecked="false" forceReloadListOnInitOrChangeRoot="true" editable="false" clerk="twficOccurrencesOfSense" filterBar="true" ShowOwnerShortname="true">
							<include path="../Words/reusableBrowseControlConfiguration.xml" query="reusableControls/control[@id='concordanceColumns']/columns"/>
						</parameters>
					</control>
					<control id="SegmentPreviewControl">
						<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.RecordDocXmlView"/>
						<parameters id="SegmentPreviewControl" clerk="twficOccurrencesOfSense" treeBarAvailability="NotMyBusiness" layout="publicationNew" editable="false"/>
					</control>
				</parameters>
			</guicontrol>
			<guicontrol id="matchingEntries" assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.MatchingEntriesBrowser">
				<parameters id="lexentryMatchList" clerk="matchingEntries" filterBar="false" treeBarAvailability="NotAllowed" defaultCursor="Arrow" hscroll="true" altTitleId="LexEntry-Plural" editable="false">
					<columns>
						<column label="Headword" sortmethod="FullSortKey" ws="$ws=vernacular" editable="false" width="96000" layout="EntryHeadwordForFindEntry"/>
						<column label="Lexeme Form" visibility="menu" common="true" sortmethod="MorphSortKey" ws="$ws=vernacular" editable="false" layout="LexemeFormForFindEntry"/>
						<column label="Citation Form" visibility="menu" sortmethod="CitationFormSortKey" ws="$ws=vernacular" editable="false" layout="CitationFormForFindEntry"/>
						<column label="Allomorphs" editable="false" width="96000" ws="$ws=vernacular" layout="AllomorphsForFindEntry"/>
						<column label="Morph Type" visibility="menu" editable="false" field="LexEntry.LexemeForm" subfield="MoForm.MorphType" list="LexDb.MorphTypes" layout="MorphTypeofEntry"/>
						<column label="Glosses" editable="false" width="96000" ws="$ws=analysis" layout="GlossesForFindEntry"/>
						<column headerlabel="Grammatical Info." label="Grammatical Info. (Full)" visibility="menu" multipara="true" layout="MsasOfSenses" chooserFilter="external" editable="false">
							<dynamicloaderinfo assemblyPath="FdoUi.dll" class="SIL.FieldWorks.FdoUi.EntryPosFilter"/>
						</column>
						<column headerlabel="Grammatical Info." label="Grammatical Info. (Abbr.)" visibility="menu" multipara="true" layout="MsasOfSensesAbbr" chooserFilter="external" editable="false">
							<dynamicloaderinfo assemblyPath="FdoUi.dll" class="SIL.FieldWorks.FdoUi.EntryPosFilter"/>
						</column>
					</columns>
				</parameters>
			</guicontrol>
			<guicontrol id="MergeAllomorphList">
				<parameters id="mergeAllomorphList" listItemsClass="MoForm" filterBar="false" treeBarAvailability="NotAllowed" defaultCursor="Arrow"
							hscroll="true" editable="false" selectColumn="false">
					<columns>
						<column label="Form" width="80%" layout="Allomorph" ws="$ws=vernacular"/>
						<column label="Type" width="20%" layout="MorphTypeName"/>
					</columns>
				</parameters>
			</guicontrol>
			<guicontrol id="MergeSenseList">
				<parameters id="mergeSenseList" listItemsClass="LexSense" filterBar="false" treeBarAvailability="NotAllowed" defaultCursor="Arrow"
							hscroll="true" editable="false" selectColumn="false">
					<columns>
						<column label="Gloss" width="50%" layout="Gloss" ws="$ws=analysis"/>
						<column label="Grammatical Info." width="50%" multipara="true" layout="GrammaticalInfoAbbrForSense"/>
						<column label="Definition" width="100%" layout="Definition" ws="$ws=analysis" visibility="menu"/>
					</columns>
				</parameters>
			</guicontrol>
			<guicontrol id="MergeReversalEntryList">
				<parameters id="mergeReversalEntryList" listItemsClass="ReversalIndexEntry" filterBar="false" treeBarAvailability="NotAllowed" defaultCursor="Arrow"
							hscroll="true" editable="false" selectColumn="false">
					<columns>
						<column label="Entry" width="100%" layout="ReversalForm" ws="$ws=reversal"/>
					</columns>
				</parameters>
			</guicontrol>
			<guicontrol id="matchingReversalEntries" assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.MatchingReversalEntriesBrowser">
				<parameters id="reventryMatchList" clerk="matchingReversalEntries" filterBar="false" treeBarAvailability="NotAllowed" defaultCursor="Arrow" hscroll="true" altTitleId="ReversalIndexEntry-Plural" editable="false" disableConfigButton="true">
					<columns>
						<column label="Form" sortmethod="FullSortKey" ws="$ws=reversal" editable="false">
							<span>
								<properties>
									<editable value="false"/>
								</properties>
								<string field="ReversalForm" ws="reversal"/>
							</span>
						</column>
						<column label="Category">
							<span>
								<properties>
									<editable value="false"/>
								</properties>
								<obj field="PartOfSpeech" layout="empty">
									<span>
										<properties>
											<editable value="false"/>
										</properties>
										<string field="Name" ws="best analysis"/>
									</span>
								</obj>
							</span>
						</column>
					</columns>
				</parameters>
			</guicontrol>
			<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/controls/parameter/guicontrol/*"/>
			<clerks>
				<clerk id="twficOccurrencesOfSense" shouldHandleDeletion="false">
					<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.TemporaryRecordClerk"/>
					<recordList class="LexSense" field="InstancesInTwfics"/>
					<filters/>
					<sortMethods/>
				</clerk>
				<clerk id="matchingEntries" shouldHandleDeletion="false">
					<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.MatchingItemsRecordClerk"/>
					<recordList owner="LexDb" property="Entries">
						<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.MatchingItemsRecordList"/>
					</recordList>
					<!-- filters are not needed because the list is prefiltered -->
					<!-- only the default sortMethod is needed -->
					<sortMethods>
						<sortMethod label="Default" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="ShortName"/>
					</sortMethods>
				</clerk>
				<clerk id="matchingReversalEntries" shouldHandleDeletion="false">
					<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.MatchingItemsRecordClerk"/>
					<recordList owner="ReversalIndex" property="Entries">
						<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.MatchingItemsRecordList"/>
					</recordList>
					<!-- filters are not needed because the list is prefiltered -->
					<!-- only the default sortMethod is needed -->
					<sortMethods>
						<sortMethod label="Default" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="ShortName"/>
					</sortMethods>
				</clerk>
				<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/controls/parameter/clerks/clerk/*"/>
			</clerks>
		</parameters>
	</controls>
	<!-- ******************************************************** -->
	<!-- ************************ menus *********************** -->
	<!-- ******************************************************** -->
	<menubar>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/menubar/*"/>
	</menubar>
	<!-- ********************************************************** -->
	<!-- ************************ menuAddOn *********************** -->
	<!-- ********************************************************** -->
	<menuAddOn>
		<menu id="Insert">
			<item command="CmdInsertLexEntry" defaultVisible="false"/>
			<item command="CmdInsertSense" defaultVisible="false"/>
			<item command="CmdInsertVariant" defaultVisible="false"/>
			<item command="CmdDataTree-Insert-AlternateForm" label="A_llomorph" defaultVisible="false"/>
			<item command="CmdInsertReversalIndex" defaultVisible="false"/>
			<item command="CmdInsertReversalEntry" defaultVisible="false"/>
			<item command="CmdDataTree-Insert-Pronunciation" defaultVisible="false"/>
			<item command="CmdInsertMediaFile" defaultVisible="false"/>
			<item label="-" translate="do not translate"/>
			<item command="CmdInsertSubsense" defaultVisible="false"/>
			<item command="CmdInsertPicture" defaultVisible="false"/>
		</menu>
		<menu id="Edit">
			<item command="CmdGoToReversalEntry" defaultVisible="false"/>
			<item command="CmdDeleteReversalIndex" defaultVisible="false"/>
		</menu>
		<menu id="View">
			<item label="Show _Dictionary Preview" boolProperty="Show_DictionaryPubPreview" defaultVisible="false"/>
			<item label="_Show Hidden Fields" boolProperty="ShowHiddenFields" defaultVisible="false"/>
		</menu>
		<!-- This is really the Tools-Configure submenu.-->
		<menu id="Configure">
			<item label="{0}" command="CmdConfigureXmlDocView" defaultVisible="false"/>
		</menu>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/menuAddOn/*"/>
	</menuAddOn>
	<!-- ********************************************************** -->
	<!-- ************************ contextMenus *********************** -->
	<!-- ********************************************************** -->
	<contextMenus>
		<menu id="PaneBar-LexicalDetail" label="">
			<menu id="LexEntryPaneMenu" icon="MenuWidget">
				<item label="Show Dictionary Preview" boolProperty="Show_DictionaryPubPreview"/>
				<item label="-" translate="do not translate"/>
				<item label="Insert _Sense" command="CmdInsertSense"/>
				<item label="Insert Subsense (in sense)" command="CmdInsertSubsense"/>
				<item label="Insert _Variant" command="CmdInsertVariant"/>
				<item label="Insert A_llomorph" command="CmdDataTree-Insert-AlternateForm"/>
				<item label="Insert _Pronunciation" command="CmdDataTree-Insert-Pronunciation"/>
				<item label="Insert Sound or Movie _File" command="CmdInsertMediaFile"/>
				<item label="-" translate="do not translate"/>
				<item command="CmdChangeToComplexForm"/>
				<item command="CmdChangeToVariant"/>
				<item command="CmdMergeEntry" defaultVisible="false"/>
				<item label="-" translate="do not translate"/>
				<item command="CmdRootEntryJumpToConcordance"/>
			</menu>
			<item label="Show Hidden Fields" boolProperty="ShowHiddenFields-lexiconEdit" defaultVisible="true" settingsGroup="local"/>
		</menu>
		<menu id="PaneBar-ReversalEntryDetail" label="">
			<item label="Show Hidden Fields" boolProperty="ShowHiddenFields-reversalToolEditComplete" defaultVisible="true" settingsGroup="local"/>
		</menu>
		<menu id="PaneBar-ShowFailingItems-Classified" label="">
			<item label="Show Unused Items" boolProperty="ShowFailingItems-lexiconClassifiedDictionary" defaultVisible="true" settingsGroup="local"/>
		</menu>
		<include path="DataTreeInclude.xml" query="window/contextMenus/*"/>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/contextMenus/*"/>
	</contextMenus>
	<!-- ********************************************************** -->
	<!-- ************************ sidebar *********************** -->
	<!-- ********************************************************** -->
	<sidebar>
		<tab label="Lexical Tools" list="LexicalToolsList" behavior="singlePropertyAtomicValue" property="currentContentControl"/>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/sidebar/*"/>
	</sidebar>
	<!-- ********************************************************** -->
	<!-- ************************ toolbars *********************** -->
	<!-- ********************************************************** -->
	<toolbars/>
	<!-- ********************************************************** -->
	<!-- ************************ toolbarsAddOn *********************** -->
	<!-- ********************************************************** -->
	<toolbarsAddOn>
		<!--	Brings out bug where showing a list forces the list to set a current value which then propogates messages to a world that is not ready for them!

		<toolbar id="BarViews" list="ListViews" behavior="singlePropertyAtomicValue" property="currentContentControl"/> -->
		<!--    <include query="window/toolbars/*"/> -->
		<toolbar id="Insert">
			<item command="CmdInsertLexEntry" defaultVisible="false"/>
			<item command="CmdGoToEntry" defaultVisible="false"/>
			<item command="CmdInsertReversalEntry" defaultVisible="false"/>
			<item command="CmdGoToReversalEntry" defaultVisible="false"/>
		</toolbar>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/toolbarsAddOn/*"/>
	</toolbarsAddOn>
	<!-- ********************************************************** -->
	<!-- ************************ resources ********************* -->
	<!-- ********************************************************** -->
	<resources>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/resources/*"/>
	</resources>
	<!-- ********************************************************** -->
	<!-- ************************ listeners *********************** -->
	<!-- ********************************************************** -->
	<listeners>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/listeners/*"/>
		<listener assemblyPath="LexTextControls.dll" class="SIL.FieldWorks.LexText.Controls.InsertEntryDlgListener"/>
		<listener assemblyPath="LexTextControls.dll" class="SIL.FieldWorks.LexText.Controls.GoLinkEntryDlgListener"/>
		<listener assemblyPath="LexTextControls.dll" class="SIL.FieldWorks.LexText.Controls.MergeEntryDlgListener"/>
		<listener assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.ReversalListener">
			<parameters clerk="reversalEntries"/>
		</listener>
	</listeners>
	<!-- ********************************************************** -->
	<!-- ************************ virtual property declarations *********************** -->
	<!-- ********************************************************** -->
	<virtuals>
		<virtual modelclass="LexEntry" virtualfield="HeadWordAndType" ws="$ws=vernacular" depends="CitationForm,LexemeForm.Form,HomographNumber" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="InstancesInTwfics">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/virtuals/*"/>
		<!-- LexEntry virtuals. -->
		<virtual modelclass="LexEntry" virtualfield="NumberOfSenses" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.IntegerPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="HeadWord" ws="$ws=vernacular" depends="CitationForm,LexemeForm.Form,HomographNumber" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="MLHeadWord" method="HeadWordForWs" depends="CitationForm,LexemeForm.Form,LexemeForm.MorphType,HomographNumber" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="MinimalLexReferences" bulkLoadMethod="LoadAllMinimalLexReferences" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="LexEntryReferences" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.LexEntryReferencesVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="PicturesOfSenses" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.EntryPicturesVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="VariantFormEntries" bulkLoadMethod="LoadAllVariantFormEntries" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
	<virtual modelclass="LexEntry" virtualfield="IsASubentry" computeeverytime="true">
	  <dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOBooleanPropertyVirtualHandler"/>
	</virtual>
	<virtual modelclass="LexEntry" virtualfield="ComplexFormEntries" bulkLoadMethod="LoadAllComplexFormEntries" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="VariantFormEntryBackRefs" bulkLoadMethod="LoadAllVariantFormEntryBackRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="ComplexFormEntryBackRefs" bulkLoadMethod="LoadAllComplexFormEntryBackRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="AllComplexFormEntryBackRefs" bulkLoadMethod="LoadAllAllComplexFormEntryBackRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="VariantEntryRefs" bulkLoadMethod="LoadAllVariantEntryRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="ComplexFormEntryRefs" bulkLoadMethod="LoadAllComplexFormEntryRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="PublishAsMinorEntry" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.IntegerPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="VisibleEntryRefs" bulkLoadMethod="LoadAllVisibleEntryRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntry" virtualfield="VisibleVariantEntryRefs" bulkLoadMethod="LoadAllVisibleVariantEntryRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
	<virtual modelclass="LexEntry" virtualfield="AllSenseHvos" destinationClass="LexSense">
	  <dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
	</virtual>
	<!-- LexSense virtuals. -->
		<virtual modelclass="LexSense" virtualfield="FullReferenceName" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="MinimalLexReferences" bulkLoadMethod="LoadAllMinimalLexReferences" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="LexSenseReferences" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.LexSenseReferencesVirtualHandler"/>
		</virtual>
		<!-- changed ReversalEntriesText to use MLStringPropertyVirtualHandler, and changed MLStringPropertyVirtualHandler to parse depends attribute for LT-6247 display update -->
		<virtual modelclass="LexSense" virtualfield="ReversalEntriesText" method="ReversalEntriesText" depends="ReversalEntries,ReversalEntries.ReversalForm" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="ReversalEntriesBulkText">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.LexSenseReversalEntriesTextHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="HeadWord" ws="$ws=vernacular">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="MLHeadWord" method="HeadWordForWs">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="LexSenseOutline" ownerclass="LexSense" ownerfield="Senses" includetopowner="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OutlineNumberHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="OwnerOutlineName" ws="$ws=vernacular">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="MLOwnerOutlineName" method="OwnerOutlineNameForWs">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="VariantFormEntries" bulkLoadMethod="LoadAllVariantFormEntries" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="ComplexFormEntries" bulkLoadMethod="LoadAllComplexFormEntries" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="VariantFormEntryBackRefs" bulkLoadMethod="LoadAllVariantFormEntryBackRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexSense" virtualfield="ComplexFormEntryBackRefs" bulkLoadMethod="LoadAllComplexFormEntryBackRefs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<!-- ReversalIndex virtuals. -->
		<virtual modelclass="ReversalIndex" virtualfield="AllEntries">
			<dynamicloaderinfo assemblyPath="LexEdDll.dll" class="SIL.FieldWorks.XWorks.LexEd.AllReversalEntriesVh"/>
		</virtual>
		<!-- ReversalIndexEntry virtuals. -->
		<virtual modelclass="ReversalIndexEntry" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="ReversalIndexEntry" virtualfield="OtherWsFormsTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="ReversalIndexEntry" virtualfield="ReferringSenses">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.BackRefSeqVirtualHandler"/>
			<parameters class="LexSense" field="ReversalEntries"/>
		</virtual>
		<!-- MSAs of all classes virtuals. -->
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="InterlinearName">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MSAInterlinearNameVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="ShortNameTSS" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="LongNameTs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="LongNameAdHocTs" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>

		<virtual modelclass="MoMorphSynAnalysis" virtualfield="PartOfSpeechTSS" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="MLPartOfSpeech" method="PartOfSpeechForWsTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="Slots">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="InflectionClassTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="MLInflectionClass" method="InflectionClassForWsTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.MLStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="FeaturesTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoMorphSynAnalysis" virtualfield="ExceptionFeaturesTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>

		<virtual modelclass="MoStemMsa" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoInflAffMsa" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="MoInflAffMsa" virtualfield="GlossTSS" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>

		<!-- Feature classes virtuals. -->
		<virtual modelclass="FsFeatStrucType" virtualfield="ShortNameTSS" depends="Name" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="FsFeatStruc" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="FsFeatStruc" virtualfield="LongNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
	<virtual modelclass="FsFeatStruc" virtualfield="ChooserNameTS">
	  <dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
	</virtual>
	<virtual modelclass="FsSymFeatVal" virtualfield="ShortNameTSS" depends="Name" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<!-- LexDb classes virtuals. -->
		<virtual modelclass="LexDb" virtualfield="CurrentReversalIndices" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllSenses" destinationClass="LexSense">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.AllLexSensesVh"/>
		</virtual>

		<!-- Misc morphology class virtuals.  -->
		<virtual modelclass="MoForm" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoForm" virtualfield="LongNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoForm" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="MoInflAffixSlot" virtualfield="Affixes" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>

		<virtual modelclass="MoInflAffixSlot" virtualfield="PrefixMarkedShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoInflAffixSlot" virtualfield="SuffixMarkedShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>

		<virtual modelclass="MoInflAffMsa" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="WfiMorphBundle" virtualfield="DefaultSense" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.WfiMorphBundleDefaultSenseHandler"/>
		</virtual>
		<!-- Misc class virtuals. -->
		<virtual modelclass="LexReference" virtualfield="FullDisplayText">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="CmSemanticDomain" virtualfield="ReferringSenses">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.BackRefSeqVirtualHandler"/>
			<parameters class="LexSense" field="SemanticDomains"/>
		</virtual>
		<virtual modelclass="CmPossibility" virtualfield="AbbrAndNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="CmPicture" virtualfield="PathNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="CmPicture" virtualfield="SenseNumberTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="CmObject" virtualfield="ShortNameTSS">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.TSStringPropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexExampleSentence" virtualfield="OwningSense">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexSense"/>
		</virtual>
		<virtual modelclass="CmTranslation" virtualfield="OwningExample">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexExampleSentence"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllExampleSentenceTargets" depends="Entries.Senses.Examples,Entries.Senses,Entries" destinationClass="LexExampleSentence">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOGhostSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllExampleTranslationTargets" depends="Entries.Senses.Examples.Translations,Entries.Senses.Examples,Entries.Senses,Entries" destinationClass="CmTranslation">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOGhostSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexPronunciation" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="LexEntryRef" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="LexEntryRef" virtualfield="ExampleSentences" bulkLoadMethod="LoadAllExampleSentences" destinationClass="LexExampleSentence" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexEntryRef" virtualfield="MorphoSyntaxAnalyses" bulkLoadMethod="LoadAllMorphoSyntaxAnalyses" destinationClass="MoMorphSynAnalysis" computeeverytime="true">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllPossiblePronunciations" depends="Entries.Pronunciations,Entries" destinationClass="LexPronunciation">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOGhostSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllEntryRefs" depends="Entries.EntryRefs,Entries" destinationClass="LexEntryRef">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOSequencePropertyVirtualHandler"/>
		</virtual>
		<virtual modelclass="MoForm" virtualfield="OwningEntry">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.OwnerOfClassVirtualHandler"/>
			<parameters OwnerClass="LexEntry"/>
		</virtual>
		<virtual modelclass="LexDb" virtualfield="AllPossibleAllomorphs" depends="Entries.AlternateForms,Entries" destinationClass="MoForm"
				 ghostCreateClassMethod="GetDefaultClassForNewAllomorph">
			<dynamicloaderinfo assemblyPath="FDO.dll" class="SIL.FieldWorks.FDO.FDOGhostSequencePropertyVirtualHandler"/>
		</virtual>
	</virtuals>
	<!-- ********************************************************** -->
	<!-- ************************ defaultProperties ********************* -->
	<!-- ********************************************************** -->
	<defaultProperties>
		<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/defaultProperties/*"/>
		<property name="ToolForAreaNamed_lexicon" value="lexiconEdit" settingsGroup="local"/>
		<property name="Show_DictionaryPubPreview" bool="true" persist="true" settingsGroup="local"/>
		<property name="Show_reversalIndexEntryList" bool="true" persist="false" settingsGroup="local"/>
		<property name="ShowHiddenFields" bool="false" persist="false" settingsGroup="local"/>
	</defaultProperties>
	<!-- ********************************************************** -->
	<!-- ************************ Area Item *********************** -->
	<!-- ********************************************************** -->
	<item label="Lexicon" value="lexicon" icon="folder-lexicon">
		<parameters id="lexicon">
			<panels>
				<listPanel label="Lexical Tools" listId="LexicalToolsList"/>
			</panels>
			<clerks>
				<!-- Only put clerks here if they are shared by various tools. Put clerks for specific tool usage in the tool definition file. -->
				<clerk id="entries">
					<recordList owner="LexDb" property="Entries"/>
					<filters/>
					<sortMethods>
						<sortMethod label="Default" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="ShortName"/>
						<sortMethod label="Primary Gloss" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="PrimaryGloss"/>
					</sortMethods>
				</clerk>
				<clerk id="entriesOrChildren">
					<recordList owner="LexDb" property="Entries"> <!-- by default load for Entries but can be for AllSenses too -->
						<dynamicloaderinfo assemblyPath="xWorks.dll" class="SIL.FieldWorks.XWorks.EntriesOrChildClassesRecordList"/>
			<PartOwnershipTree>
			  <!-- the ClassOwnershipTree describes the relative relationship between the target classes in the possible source properties
							 loaded by this list. This especially helps in maintaining the CurrentIndex when switching from on property to the next. -->
			  <ClassOwnershipTree>
				<LexEntry sourceField="Entries">
				  <LexEntryRef sourceField="AllEntryRefs"/>
				  <LexPronunciation sourceField="AllPossiblePronunciations"/>
				  <MoForm sourceField="AllPossibleAllomorphs"/>
				  <LexSense sourceField="AllSenses">
					<LexExampleSentence sourceField="AllExampleSentenceTargets">
					  <CmTranslation sourceField="AllExampleTranslationTargets"/>
					</LexExampleSentence>
				  </LexSense>
				</LexEntry>
			  </ClassOwnershipTree>
			  <ParentClassPathsToChildren>
				<!-- ClassOwnershipPaths describes how to get from the parent ListItemsClass to the destinationClass objects
								of the list properties -->
				<part id="LexEntry-Jt-AllPossiblePronunciations" type="jtview">
				  <seq class="LexEntry" field="Pronunciations" firstOnly="true" layout="empty">
					<int class="LexPronunciation" field="Hvo"/>
				  </seq>
				  <!-- NOTE: AllPossiblePronunciations can also have LexEntry items, since it is a ghost field -->
				</part>
				<part id="LexEntry-Jt-AllPossibleAllomorphs" type="jtview">
				  <seq class="LexEntry" field="AlternateForms" firstOnly="true" layout="empty">
					<int class="MoForm" field="Hvo"/>
				  </seq>
				  <!-- NOTE: AllPossibleAllomorphs can also have LexEntry items, since it is a ghost field -->
				</part>
				<part id="LexEntry-Jt-AllEntryRefs" type="jtview">
				  <seq class="LexEntry" field="EntryRefs" firstOnly="true" layout="empty">
					<int class="LexEntryRef" field="Hvo"/>
				  </seq>
				</part>
				<part id="LexEntry-Jt-AllSenses" type="jtview">
				  <seq class="LexEntry" field="AllSenseHvos" firstOnly="true" layout="empty">
					<int class="LexSense" field="Hvo"/>
				  </seq>
				</part>
				<part id="LexEntry-Jt-AllExampleSentenceTargets" type="jtview">
				  <seq class="LexEntry" field="AllSenseHvos" firstOnly="true" layout="empty">
					<seq class="LexSense" field="Examples" firstOnly="true" layout="empty">
					  <int class="LexExampleSentence" field="Hvo"/>
					</seq>
				  </seq>
				</part>
				<part id="LexSense-Jt-AllExampleSentenceTargets" type="jtview">
				  <seq class="LexSense" field="Examples" firstOnly="true" layout="empty">
					<int class="LexExampleSentence" field="Hvo"/>
				  </seq>
				</part>
				<part id="LexEntry-Jt-AllExampleTranslationTargets" type="jtview">
				  <seq class="LexEntry" field="AllSenseHvos" firstOnly="true" layout="empty">
					<seq class="LexSense" field="Examples" firstOnly="true" layout="empty">
					  <seq class="LexExampleSentence" field="Translations" firstOnly="true" layout="empty">
						<int class="CmTranslation" field="Hvo"/>
					  </seq>
					</seq>
				  </seq>
				</part>
				<part id="LexSense-Jt-AllExampleTranslationTargets" type="jtview">
				  <seq class="LexSense" field="Examples" firstOnly="true" layout="empty">
					<seq class="LexExampleSentence" field="Translations" firstOnly="true" layout="empty">
					  <int class="CmTranslation" field="Hvo"/>
					</seq>
				  </seq>
				</part>
				<part id="LexExampleSentence-Jt-AllExampleTranslationTargets" type="jtview">
				  <seq class="LexExampleSentence" field="Translations" firstOnly="true" layout="empty">
					<int class="CmTranslation" field="Hvo"/>
				  </seq>
				</part>
			  </ParentClassPathsToChildren>
			</PartOwnershipTree>
					</recordList>
					<filters/>
					<!-- only the default sortMethod is needed -->
					<sortMethods>
						<sortMethod label="Default" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="ShortName"/>
						<sortMethod label="Primary Gloss" assemblyPath="Filters.dll" class="SIL.FieldWorks.Filters.PropertyRecordSorter" sortProperty="PrimaryGloss"/>
					</sortMethods>
				</clerk>
				<include path="Edit/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="Browse/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="Dictionary/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="RDE/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="ReversalIndices/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="ReversalEntriesBulkEdit/toolConfiguration.xml" query="root/clerks/*"/>
				<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/clerks/*"/>
			</clerks>
			<tools>
				<include path="Edit/toolConfiguration.xml" query="root/tools/*"/>
				<include path="Browse/toolConfiguration.xml" query="root/tools/*"/>
				<include path="Dictionary/toolConfiguration.xml" query="root/tools/*"/>
				<include path="RDE/toolConfiguration.xml" query="root/tools/*"/>
				<include path="ReversalIndices/toolConfiguration.xml" query="root/tools/*"/>
				<include path="ReversalEntriesBulkEdit/toolConfiguration.xml" query="root/tools/*"/>
				<include path="Extensions/*/AreaConfigurationExtension.xml" query="root/tools/*"/>
			</tools>
		</parameters>
	</item>
</root>
