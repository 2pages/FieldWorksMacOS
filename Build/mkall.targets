<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

	<UsingTask TaskName="Unitpp" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="RegisterForTests" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="DownloadFile" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="Unzip" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="Zip" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="ForceDelete" AssemblyFile="FwBuildTasks.dll"/>

	<!-- Make all of FieldWorks. -->
	<Target Name="mkall" DependsOnTargets="initLinux;initWindows;LinuxRegistry;CopyDlls;allCpp;allCsharp;ensureTLBsUpToDate">
		<Message Text="Finished mkall Target."/>
		<CreateItem Condition="'$(action)'=='test'" Include="$(dir-outputBase)/*-nunit-output.xml">
			<Output TaskParameter="Include" ItemName="NUnitReportFiles"/>
		</CreateItem>
		<GenerateNUnitReports Condition="'$(action)'=='test'" ReportFiles="@(NUnitReportFiles)"/>
	</Target>

	<Target Name="allCpp" DependsOnTargets="DebugProcs;GenericLib;testGenericLib;FwKernel;testFwKernel;Views;testViews">
		<CreateItem Include="$(dir-outputBase)/*.compmap">
			<Output TaskParameter="Include" ItemName="CompMapFiles"/>
		</CreateItem>
		<CatenateFiles SourceFiles="@(CompMapFiles)" TargetFile="$(dir-outputBase)/components.map" Condition="'$(OS)'=='Unix'"/>
	</Target>
	<Target Name="allCppNoTest" DependsOnTargets="DebugProcs;GenericLib;FwKernel;Views">
		<CreateItem Include="$(dir-outputBase)/*.compmap">
			<Output TaskParameter="Include" ItemName="CompMapFiles"/>
		</CreateItem>
		<CatenateFiles SourceFiles="@(CompMapFiles)" TargetFile="$(dir-outputBase)/components.map" Condition="'$(OS)'=='Unix'"/>
	</Target>

	<ItemGroup>
		<Fragments Include="$(dir-fwdistfiles)/*.fragment.manifest"/>
	</ItemGroup>
	<Target Name="regFreeCpp" DependsOnTargets="FwKernel;Views"
		AfterTargets="FwKernel;Views" Condition="'$(OS)'=='Windows_NT'">
		<RegFree Executable="$(dir-outputBase)/FwKernel.dll" Output="$(dir-outputBase)/FieldWorks.Tests.manifest"
			Dlls="$(dir-outputBase)/FwKernel.dll;$(dir-outputBase)/Views.dll"
			Fragments="@(Fragments)"/>
	</Target>

	<Target Name="DebugProcs" DependsOnTargets="initLinux;initWindows">
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\DebugProcs\DebugProcs.mak"
				Configuration="$(config-capital)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)\Src\DebugProcs"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/DebugProcs/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/DebugProcs"/>
		<Message Text="Finished building DebugProcs."/>
	</Target>

	<Target Name="GenericLib" DependsOnTargets="DebugProcs">
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\Generic\GenericLib.mak"
				Configuration="$(config-capital)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)\Src\Generic"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/Generic/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/Generic"/>
		<Message Text="Finished building GenericLib."/>
	</Target>

	<Target Name="testGenericLib" DependsOnTargets="GenericLib;FwKernel;Views">
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\Generic\Test\testGenericLib.mak"
				Configuration="$(config-capital)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)\Bin"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/Generic/Test/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/Generic/Test" ContinueOnError="true"/>
		<RegFree Executable="$(dir-outputBase)\testGenericLib.exe"
				DependentAssemblies="$(dir-outputBase)\FwKernel.X.manifest;$(dir-outputBase)\Views.X.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<Exec Command="mt.exe -outputresource:$(dir-outputBase)\testGenericLib.exe -manifest $(dir-outputBase)\testGenericLib.exe.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<Unitpp Condition="'$(action)'=='test'"
				FixturePath="$(dir-outputBase)/testGenericLib"
				FudgeFactor="$(timeoutFudgeFactor)"
				Timeout="60000">
			<Output TaskParameter="FailedSuites" ItemName="FailedSuites"/>
		</Unitpp>
		<Message Text="Finished building testGenericLib." Condition="'$(action)'!='test'"/>
		<Message Text="Finished building testGenericLib and running tests." Condition="'$(action)'=='test'"/>
	</Target>

	<Target Name="FwKernel" DependsOnTargets="GenericLib;GenerateCellarConstants;AppCore;createCompMaps;ManagedLgIcuCollator">
		<Message Text="FwKernel make-target='$(make-target)'"/>
		<Make Condition="'$(OS)'=='Windows_NT'"
			Makefile="$(fwrt)\Src\Kernel\FwKernel.mak"
			Configuration="$(config-capital)"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)\Src\Kernel"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
			Makefile="$(fwrt)/Src/Kernel/Makefile"
			Configuration="$(config-capital)" Target="$(make-target)"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)/Src/Kernel"/>
		<RegFree Executable="$(dir-outputBase)\FwKernel.dll" Output="$(dir-outputBase)\FwKernel.X.manifest" Condition="'$(OS)'=='Windows_NT'" />
		<Message Text="Finished building FwKernel."/>
	</Target>

	<Target Name="testFwKernel" DependsOnTargets="GenericLib;FwKernel;Views">
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\Kernel\Test\testFwKernel.mak"
				Configuration="$(config-capital)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)\Bin"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/Kernel/Test/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/Kernel/Test" ContinueOnError="true"/>
		<RegFree Executable="$(dir-outputBase)\testFwKernel.exe"
				DependentAssemblies="$(dir-outputBase)\FwKernel.X.manifest;$(dir-outputBase)\Views.X.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<Exec Command="mt.exe -outputresource:$(dir-outputBase)\testFwKernel.exe -manifest $(dir-outputBase)\testFwKernel.exe.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<CreateItem Include="$(dir-outputBase)/*.compmap">
			<Output TaskParameter="Include" ItemName="KernelCompMapFiles"/>
		</CreateItem>
		<CatenateFiles SourceFiles="@(KernelCompMapFiles)" TargetFile="$(dir-outputBase)/components.map" Condition="'$(OS)'=='Unix'"/>
		<Unitpp Condition="'$(action)'=='test'"
				FixturePath="$(dir-outputBase)/testFwKernel"
				FudgeFactor="$(timeoutFudgeFactor)"
				Timeout="60000">
			<Output TaskParameter="FailedSuites" ItemName="FailedSuites"/>
		</Unitpp>
		<Message Text="Finished building testFwKernel." Condition="'$(action)'!='test'"/>
		<Message Text="Finished building testFwKernel and running tests." Condition="'$(action)'=='test'"/>
	</Target>

	<Target Name="AppCore" DependsOnTargets="DebugProcs;GenericLib">
		<Message Text="AppCore make-target='$(make-target)'"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/AppCore/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/AppCore"/>
		<Message Text="Finished building AppCore."/>
	</Target>

	<Target Name="Views" DependsOnTargets="GenericLib;FwKernel;GenerateCellarConstants">
		<Make Condition="'$(OS)'=='Windows_NT'"
			Makefile="$(fwrt)\Src\views\Views.mak"
			Configuration="$(config-capital)"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)\Src\views"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
			Makefile="$(fwrt)/Src/views/Makefile"
			Configuration="$(config-capital)" Target="$(make-target)"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)/Src/views"/>
		<RegFree Executable="$(dir-outputBase)\Views.dll" Output="$(dir-outputBase)\Views.X.manifest" Condition="'$(OS)'=='Windows_NT'" />
		<Message Text="Finished building Views."/>
	</Target>

	<Target Name="testViews" DependsOnTargets="GenericLib;Views;SimpleRootSite;FwKernel">
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\views\Test\testViews.mak"
				Configuration="$(config-capital)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)\Bin"/>
		<Make Condition="'$(OS)'=='Unix'" ToolPath="/usr/bin"
				Makefile="$(fwrt)/Src/views/Test/Makefile"
				Configuration="$(config-capital)" Target="$(make-target)"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)/Src/views/Test" ContinueOnError="true"/>
		<RegFree Executable="$(dir-outputBase)\testViews.exe"
				DependentAssemblies="$(dir-outputBase)\FwKernel.X.manifest;$(dir-outputBase)\Views.X.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<Exec Command="mt.exe -outputresource:$(dir-outputBase)\testViews.exe -manifest $(dir-outputBase)\testViews.exe.manifest"
				Condition="'$(OS)'=='Windows_NT'"/>
		<CreateItem Include="$(dir-outputBase)/*.compmap">
			<Output TaskParameter="Include" ItemName="ViewsCompMapFiles"/>
		</CreateItem>
		<CatenateFiles SourceFiles="@(ViewsCompMapFiles)" TargetFile="$(dir-outputBase)/components.map" Condition="'$(OS)'=='Unix'"/>
		<Unitpp Condition="'$(action)'=='test'"
				FixturePath="$(dir-outputBase)/testViews"
				FudgeFactor="$(timeoutFudgeFactor)"
				Timeout="60000">
			<Output TaskParameter="FailedSuites" ItemName="FailedSuites"/>
		</Unitpp>
		<Message Text="Finished building testViews." Condition="'$(action)'!='test'"/>
		<Message Text="Finished building testViews and running tests." Condition="'$(action)'=='test'"/>
	</Target>

	<ItemGroup>
		<CellarConstantsInputs Include="$(fwrt)/Src/FDO/MasterFieldWorksModel.xml"/>
		<CellarConstantsInputs Include="$(fwrt)/Src/FDO/FDOGenerate/CellarConstants.vm.h"/>
		<CellarConstantsOutputs Include="$(fwrt)/Output/Common/CellarConstants.h"/>
	</ItemGroup>

	<Target Name="GenerateCellarConstants" DependsOnTargets="CopyCellarBaseConstants"
			Inputs="@(CellarConstantsInputs)" Outputs="@(CellarConstantsOutputs)">
		<MakeDir Directories="$(dir-fwoutputCommon)" Condition="'$(action)'!='clean'"/>
		<FdoGenerate XmlFile="$(fwrt)/Src/FDO/MasterFieldWorksModel.xml"
					 OutputDir="$(dir-fwoutputCommon)"
					 OutputFile="CellarConstants.h"
					 TemplateFile="$(fwrt)/Src/FDO/FDOGenerate/CellarConstants.vm.h"
					 WorkingDirectory="$(fwrt)/Src/FDO"
					 Condition="'$(action)'!='clean'"/>
	</Target>

	<Target Name="CopyCellarBaseConstants" Inputs="$(fwrt)/Src/Kernel/CellarBaseConstants.h" Outputs="$(fwrt)/Output/Common/CellarBaseConstants.h">
		<MakeDir Directories="$(dir-fwoutputCommon)" Condition="'$(action)'!='clean'"/>
		<Copy SourceFiles="$(fwrt)/Src/Kernel/CellarBaseConstants.h"
				DestinationFolder="$(fwrt)/Output/Common"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
				Condition="'$(action)'!='clean'"/>
	</Target>

	<PropertyGroup>
		<Original-OBJ_DIR>$(OBJ_DIR)</Original-OBJ_DIR>
		<Original-BUILD4UX>$(BUILD4UX)</Original-BUILD4UX>
		<Original-ANAL_TYPE>$(ANAL_TYPE)</Original-ANAL_TYPE>
	</PropertyGroup>

	<Target Name="mktlbs" DependsOnTargets="GenerateCellarConstants">
		<SetEnvVar Variable="BUILD_OUTPUT" Value="$(dir-fwoutput)" />
		<SetEnvVar Variable="OBJ_DIR" Value="$(dir-fwobj)" />
		<SetEnvVar Variable="BUILD4UX" Value="$(build4ux)"/>
		<SetEnvVar Variable="ANAL_TYPE" Value="performance" Condition="'$(performance)'=='true'"/>
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\Kernel\FwKernel.mak"
				Configuration="$(config-capital)"
				Target="dirs $(dir-fwoutputCommon)\FwKernelTlb.tlb"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)"/>
		<Make Condition="'$(OS)'=='Windows_NT'"
				Makefile="$(fwrt)\Src\views\Views.mak"
				Configuration="$(config-capital)"
				Target="dirs $(dir-fwoutputCommon)\ViewsTlb.tlb"
				BuildRoot="$(fwrt)"
				WorkingDirectory="$(fwrt)"/>
		<SetEnvVar Variable="BUILD_OUTPUT" Value="$(Original-BUILD_OUTPUT)" />
		<SetEnvVar Variable="OBJ_DIR" Value="$(Original-OBJ_DIR)" />
		<SetEnvVar Variable="BUILD4UX" Value="$(Original-BUILD4UX)" />
		<SetEnvVar Variable="ANAL_TYPE" Value="$(Original-ANAL_TYPE)" />
	</Target>

	<Target Name="remakefw-internal" DependsOnTargets="CleanAll;Initialize;setRegistryValues;ensureTLBsUpToDate;CopyDlls;IcuData;mkall"/>

	<Target Name="remakefw" DependsOnTargets="remakefw-internal">
		<Error Condition="'@(FailedSuites)'!=''" Text="The following projects had failing tests: @(FailedSuites)" />
	</Target>

	<Target Name="remakefw-jenkins" DependsOnTargets="remakefw-internal">
		<!-- Jenkins looks at the test output files to see if tests failed, so we don't have to
			fail on failed tests -->
		<Warning Condition="'@(FailedSuites)'!=''" Text="The following projects had failing tests: @(FailedSuites)" />
	</Target>

	<ItemGroup>
		<GeneratedFiles Include="$(fwrt)/Src/**/Collection.cpp"/>
		<GeneratedFiles Include="$(fwrt)/Src/**/asserts.log"/>
		<GeneratedFiles Include="$(fwrt)/Src/Common/COMInterfaces/FwKernel.cs"/>
		<GeneratedFiles Include="$(fwrt)/Src/Common/COMInterfaces/Views.cs"/>
		<GeneratedFiles Include="$(fwrt)/Src/FDO/DomainImpl/GeneratedFactoryImplementations.cs"/>
		<GeneratedFiles Include="$(fwrt)/Src/FDO/DomainImpl/FDOGenerated.cs"/>
	</ItemGroup>

	<Target Name="CleanAll" DependsOnTargets="cleanWindows;cleanLinux">
		<!-- remove the Obj and Output directories -->
		<ForceDelete Files="$(dir-fwobj);$(dir-fwoutput)"/>
		<ForceDelete Files="$(fwrt)/Output" Condition="'$(OS)'=='Unix'"/>
		<!-- remove other directories and files created during the build process -->
		<ForceDelete Files="@(IcuDataFiles)"/>
		<ForceDelete Files="$(fwrt)/Bin/FieldWorks.targets"/>
		<ForceDelete Files="@(GeneratedFiles)"/>
		<ForceDelete Files="$(fwrt)/DistFiles/Icu$(IcuVersion).zip"/>

		<Message Text="Finished deleting the output directories!"/>
	</Target>

	<PropertyGroup>
		<!-- bt2 is the master branch build of Chorus for Windows development. Update when appropriate. -->
		<ChorusDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt2/.lastSuccessful</ChorusDownloadUrl>
		<!-- bt323 is the master branch build of Chorus for Linux development. Update when appropriate. -->
		<ChorusDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/bt323/.lastSuccessful</ChorusDownloadUrl>
		<!-- bt223 is the master branch build of Palaso for Windows development. Update when appropriate. -->
		<PalasoDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt223/.lastSuccessful</PalasoDownloadUrl>
		<!-- bt322 is the master branch build of Palaso for Linux development. Update when appropriate. -->
		<PalasoDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/bt322/.lastSuccessful</PalasoDownloadUrl>
		<!-- bt399 is the GeckoFX 29 build for Windows -->
		<GeckoDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt399/.lastSuccessful</GeckoDownloadUrl>
		<!-- bt400 is the XULRunner 29 build for Windows -->
		<XULRunnerDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt400/.lastSuccessful</XULRunnerDownloadUrl>
		<!--Todo: use PalasoDownloadUrl, when it refers to somewhere that has the IPCFramework.-->
		<!-- bt278 is the develop branch build of IPCFramework for Windows development. Update when appropriate. -->
		<IPCFrameworkDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt278/.lastSuccessful</IPCFrameworkDownloadUrl>
		<!-- bt279 is the develop branch build of IPCFramework for Linux development. Update when appropriate. -->
		<IPCFrameworkDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/bt279/.lastSuccessful</IPCFrameworkDownloadUrl>
		<!-- bt393 is the master branch build of ExCss for Windows development. Update when appropriate. -->
		<ExCssDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt393/.lastSuccessful</ExCssDownloadUrl>
		<!-- bt395 is the master branch build of ExCss for Linux development. Update when appropriate. -->
		<ExCssDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/bt395/.lastSuccessful</ExCssDownloadUrl>
		<!-- bt469 is the master branch build of icucil for Windows development. Update when appropriate. -->
		<IcuDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt14/.lastSuccessful</IcuDownloadUrl>
		<!-- Libraries_IcucilPrecise64icu54Continuous is the ICU 54 master branch build of icucil for Linux development. Update when appropriate. -->
		<IcuDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/Libraries_IcucilPrecise64icu54Continuous/.lastSuccessful</IcuDownloadUrl>
		<!-- bt469 is the master branch build of icucil for Windows development. Update when appropriate. -->
		<IcuDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/bt14/.lastSuccessful</IcuDownloadUrl>
		<!-- Libraries_IcucilPrecise64icu54Continuous is the ICU 54 master branch build of icucil for Linux development. Update when appropriate. -->
		<IcuDownloadUrl Condition="'$(OS)'=='Unix'">http://build.palaso.org/guestAuth/repository/download/Libraries_IcucilPrecise64icu54Continuous/.lastSuccessful</IcuDownloadUrl>
		<ProtoBufNetDownloadUrl>https://protobuf-net.googlecode.com/files/protobuf-net%20r668.zip</ProtoBufNetDownloadUrl>
		<DownloadsSilOrgDownloadUrl>http://downloads.sil.org/BuildDlls/FW8.1/</DownloadsSilOrgDownloadUrl>
		<HermitCrabDownloadUrl>http://build.palaso.org/guestAuth/repository/download/bt410/.lastSuccessful</HermitCrabDownloadUrl>
		<Icu4cDownloadUrl Condition="'$(OS)'=='Windows_NT'">http://build.palaso.org/guestAuth/repository/download/Libraries_Icu4cWin32FieldWorksContinuous/.lastSuccessful</Icu4cDownloadUrl>
		<!-- Windows/.Net and Linux/Mono use different extensions for debug information files. -->
		<DebugInfo Condition="'$(OS)'=='Unix'">dll.mdb</DebugInfo>
		<DebugInfo Condition="'$(OS)'=='Windows_NT'">pdb</DebugInfo>
	</PropertyGroup>

	<Target Name="downloadDlls">
		<MakeDir Directories="$(fwrt)/Downloads"/>
		<Message Text="Downloading latest successful artifacts from Palaso master build."/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.dll" LocalFilename="$(fwrt)/Downloads/Palaso.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.dll.config" LocalFilename="$(fwrt)/Downloads/Palaso.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.$(DebugInfo)" LocalFilename="$(fwrt)/Downloads/Palaso.$(DebugInfo)"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.Lift.dll" LocalFilename="$(fwrt)/Downloads/Palaso.Lift.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.Lift.$(DebugInfo)" LocalFilename="$(fwrt)/Downloads/Palaso.Lift.$(DebugInfo)"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.Media.dll" LocalFilename="$(fwrt)/Downloads/Palaso.Media.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.Media.dll.config" LocalFilename="$(fwrt)/Downloads/Palaso.Media.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Palaso.Media.$(DebugInfo)" LocalFilename="$(fwrt)/Downloads/Palaso.Media.$(DebugInfo)"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.dll" LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.dll.config" LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.$(DebugInfo)" LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.$(DebugInfo)"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.GeckoBrowserAdapter.dll"
					  LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.GeckoBrowserAdapter.$(DebugInfo)"
					  LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.$(DebugInfo)" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.GeckoBrowserAdapter.dll"
					  LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/PalasoUIWindowsForms.GeckoBrowserAdapter.$(DebugInfo)"
					  LocalFilename="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.$(DebugInfo)" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/SIL.Archiving.dll" LocalFilename="$(fwrt)/Downloads/SIL.Archiving.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/SIL.Archiving.dll.config" LocalFilename="$(fwrt)/Downloads/SIL.Archiving.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/SIL.Archiving.$(DebugInfo)" LocalFilename="$(fwrt)/Downloads/SIL.Archiving.$(DebugInfo)"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Ionic.Zip.dll" LocalFilename="$(fwrt)/Downloads/Ionic.Zip.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Keyman7Interop.dll" LocalFilename="$(fwrt)/Downloads/Keyman7Interop.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/KeymanLink.dll" LocalFilename="$(fwrt)/Downloads/KeymanLink.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<Message Text="Downloading latest successful artifacts for L10NSharp, Enchant.Net, ibusdotnet, and NDesk.DBus."/>
		<DownloadFile Address="$(PalasoDownloadUrl)/L10NSharp.dll" LocalFilename="$(fwrt)/Downloads/L10NSharp.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Commons.Xml.Relaxng.dll" LocalFilename="$(fwrt)/Downloads/Commons.Xml.Relaxng.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/irrKlang.NET4.dll" LocalFilename="$(fwrt)/Downloads/irrKlang.NET4.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Enchant.Net.dll" LocalFilename="$(fwrt)/Downloads/Enchant.Net.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/Enchant.Net.dll.config" LocalFilename="$(fwrt)/Downloads/Enchant.Net.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/ibusdotnet.dll" LocalFilename="$(fwrt)/Downloads/ibusdotnet.dll"
					  Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/NDesk.DBus.dll" LocalFilename="$(fwrt)/Downloads/NDesk.DBus.dll"
					  Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/NDesk.DBus.dll.config" LocalFilename="$(fwrt)/Downloads/NDesk.DBus.dll.config"
					  Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/taglib-sharp.dll" LocalFilename="$(fwrt)/Downloads/taglib-sharp.dll"/>
		<DownloadFile Address="$(PalasoDownloadUrl)/irrKlang.NET4.dll" LocalFilename="$(fwrt)/Downloads/irrKlang.NET4.dll"/>

		<Message Text="Downloading latest successful artifacts for GeckoFX and XULRunner." Condition="'$(OS)'=='Windows_NT'" />
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Core.dll" LocalFilename="$(fwrt)/Downloads/Geckofx-Core.dll"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Winforms.dll" LocalFilename="$(fwrt)/Downloads/Geckofx-Winforms.dll"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Winforms.pdb" LocalFilename="$(fwrt)/Downloads/Geckofx-Winforms.pdb"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Winforms.dll" LocalFilename="$(fwrt)/Downloads/Geckofx-Winforms.dll"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Winforms.pdb" LocalFilename="$(fwrt)/Downloads/Geckofx-Winforms.pdb"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(GeckoDownloadUrl)/Geckofx-Core.dll.config" LocalFilename="$(fwrt)/Downloads/Geckofx-Core.dll.config"
					  Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(XULRunnerDownloadUrl)/xulrunner-29.0.1.en-US.win32.zip" LocalFilename="$(fwrt)/Downloads/xulrunner-29.0.1.en-US.win32.zip"
					  Condition="'$(OS)'=='Windows_NT'"/>

		<Message Text="Downloading latest successful artifacts from Chorus master build."/>

		<Message Text="Downloading latest successful artifacts from Chorus master build."/>
		<DownloadFile Address="$(ChorusDownloadUrl)/Autofac.dll" LocalFilename="$(fwrt)/Downloads/Autofac.dll"/>
		<DownloadFile Address="$(ChorusDownloadUrl)/Chorus.exe" LocalFilename="$(fwrt)/Downloads/Chorus.exe"/>
		<DownloadFile Address="$(ChorusDownloadUrl)/ChorusHub.exe" LocalFilename="$(fwrt)/Downloads/ChorusHub.exe" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(ChorusDownloadUrl)/LibChorus.dll" LocalFilename="$(fwrt)/Downloads/LibChorus.dll"/>
		<DownloadFile Address="$(ChorusDownloadUrl)/Vulcan.Uczniowie.HelpProvider.dll" LocalFilename="$(fwrt)/Downloads/Vulcan.Uczniowie.HelpProvider.dll"/>

		<Message Text="Downloading latest successful artifacts for IPCFramework."/>
		<DownloadFile Address="$(IPCFrameworkDownloadUrl)/IPCFramework.dll" LocalFilename="$(fwrt)/Downloads/IPCFramework.dll"/>

		<Message Text="Downloading latest successful artifacts for ExCss."/>
		<DownloadFile Address="$(ExCssDownloadUrl)/ExCSS.dll" LocalFilename="$(fwrt)/Downloads/ExCSS.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(ExCssDownloadUrl)/ExCss.dll" LocalFilename="$(fwrt)/Downloads/ExCSS.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(ExCssDownloadUrl)/ExCSS.dll.mdb" LocalFilename="$(fwrt)/Downloads/ExCSS.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(ExCssDownloadUrl)/ExCss.pdb" LocalFilename="$(fwrt)/Downloads/ExCss.pdb" Condition="'$(OS)'=='Windows_NT'"/>

		<Message Text="Downloading latest successful artifacts for ICU.NET"/>
		<DownloadFile Address="$(IcuDownloadUrl)/icu.net.dll" LocalFilename="$(fwrt)/Downloads/icu.net.dll"/>
		<DownloadFile Address="$(IcuDownloadUrl)/icu.net.dll.config" LocalFilename="$(fwrt)/Downloads/icu.net.dll.config" Condition="'$(OS)'=='Unix'"/>

		<Message Text="Downloading protobuf-net." />
		<DownloadFile Address="$(ProtoBufNetDownloadUrl)" LocalFilename="$(fwrt)/Downloads/protobuf-net.zip" />

		<Message Text="Downloading ParaTExt DLLs." />
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Paratext.LexicalContracts.dll" LocalFilename="$(fwrt)/Downloads/Paratext.LexicalContracts.dll"/>
		<!-- Windows downloads -->
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/FormattedEditor.dll" LocalFilename="$(fwrt)/Downloads/FormattedEditor.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/HelpSystem.dll" LocalFilename="$(fwrt)/Downloads/HelpSystem.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/HtmlEditor.dll" LocalFilename="$(fwrt)/Downloads/HtmlEditor.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/NetLoc.dll" LocalFilename="$(fwrt)/Downloads/NetLoc.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/ParatextShared.dll" LocalFilename="$(fwrt)/Downloads/ParatextShared.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Windows/Utilities.dll" LocalFilename="$(fwrt)/Downloads/Utilities.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<!-- Linux downloads -->
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/FormattedEditor.dll" LocalFilename="$(fwrt)/Downloads/FormattedEditor.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/HelpSystem.dll" LocalFilename="$(fwrt)/Downloads/HelpSystem.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/HtmlEditor.dll" LocalFilename="$(fwrt)/Downloads/HtmlEditor.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/NetLoc.dll" LocalFilename="$(fwrt)/Downloads/NetLoc.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/ParatextShared.dll" LocalFilename="$(fwrt)/Downloads/ParatextShared.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadFile Address="$(DownloadsSilOrgDownloadUrl)Linux/Utilities.dll" LocalFilename="$(fwrt)/Downloads/Utilities.dll" Condition="'$(OS)'=='Unix'"/>

		<Message Text="Downloading latest successful artifacts for HermitCrab." />
		<DownloadFile Address="$(HermitCrabDownloadUrl)/QuickGraph.dll" LocalFilename="$(fwrt)/Downloads/QuickGraph.dll"/>
		<DownloadFile Address="$(HermitCrabDownloadUrl)/SIL.Machine.dll" LocalFilename="$(fwrt)/Downloads/SIL.Machine.dll"/>
		<DownloadFile Address="$(HermitCrabDownloadUrl)/SIL.Collections.dll" LocalFilename="$(fwrt)/Downloads/SIL.Collections.dll"/>
		<DownloadFile Address="$(HermitCrabDownloadUrl)/SIL.HermitCrab.dll" LocalFilename="$(fwrt)/Downloads/SIL.HermitCrab.dll"/>

		<Message Text="Downloading latest successful artifacts for icu4c." Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/gennorm2.exe" LocalFilename="$(fwrt)/Downloads/gennorm2.exe" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icudt$(IcuVersion).dll" LocalFilename="$(fwrt)/Downloads/icudt$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icuin$(IcuVersion).dll" LocalFilename="$(fwrt)/Downloads/icuin$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icutu$(IcuVersion).dll" LocalFilename="$(fwrt)/Downloads/icutu$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icuuc$(IcuVersion).dll" LocalFilename="$(fwrt)/Downloads/icuuc$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icudt.lib" LocalFilename="$(fwrt)/Downloads/icudt.lib" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icuin.lib" LocalFilename="$(fwrt)/Downloads/icuin.lib" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadFile Address="$(Icu4cDownloadUrl)/icuuc.lib" LocalFilename="$(fwrt)/Downloads/icuuc.lib" Condition="'$(OS)'=='Windows_NT'"/>
	</Target>

	<!-- item group for downloads, to allow easy copying -->
	<!-- wildcards don't work unless the files have already been downloaded once -->
	<ItemGroup>
		<DownloadedFiles Include="$(fwrt)/Downloads/Autofac.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Chorus.exe"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ChorusHub.exe" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/LibChorus.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Vulcan.Uczniowie.HelpProvider.dll"/>
		<!-- we need to explicitly specify the important files, otherwise they'll be ignored
		if they don't exist by the time this ItemGroup is read -->
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Lift.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Lift.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Lift.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Media.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Media.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Media.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Palaso.Media.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/PalasoUIWindowsForms.GeckoBrowserAdapter.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Archiving.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Archiving.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Archiving.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Archiving.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icu.net.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icu.net.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Keyman7Interop.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/KeymanLink.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/L10NSharp.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Commons.Xml.Relaxng.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/irrKlang.NET4.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Enchant.Net.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Enchant.Net.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/IPCFramework.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ExCss.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ExCss.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<!-- xBuild and MsBuild generate different case artifacts's off the same solution file. (sigh) -->
		<DownloadedFiles Include="$(fwrt)/Downloads/ExCSS.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ExCSS.dll.mdb" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ibusdotnet.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/NDesk.DBus.dll" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/NDesk.DBus.dll.config" Condition="'$(OS)'=='Unix'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Ionic.Zip.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/taglib-sharp.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/irrKlang.NET4.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/FormattedEditor.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/HelpSystem.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/HtmlEditor.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/NetLoc.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Paratext.LexicalContracts.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/ParatextShared.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Utilities.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/QuickGraph.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Machine.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.Collections.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/SIL.HermitCrab.dll"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Geckofx-Core.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Geckofx-Core.dll.config" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Geckofx-Winforms.dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/Geckofx-Winforms.pdb" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/gennorm2.exe" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icudt$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icuin$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icutu$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
		<DownloadedFiles Include="$(fwrt)/Downloads/icuuc$(IcuVersion).dll" Condition="'$(OS)'=='Windows_NT'"/>
	</ItemGroup>

	<Target Name="CopyDlls" DependsOnTargets="downloadDlls">
		<!-- .Net assemblies -->
		<Copy SourceFiles="$(fwrt)/DistFiles/LinqBridge.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>
		<Copy SourceFiles="$(fwrt)/DistFiles/log4net.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>
		<Copy SourceFiles="$(fwrt)/Lib/Common/Interop.ResourceDriver.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>
		<!-- Linux shared libraries -->
		<Copy SourceFiles="$(fwrt)/DistFiles/libxample32.so" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Unix'"/>
		<Copy SourceFiles="$(fwrt)/DistFiles/libxample64.so" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Unix'"/>
		<!-- Windows dynamically loaded libraries -->
		<Copy SourceFiles="$(fwrt)/DistFiles/xample.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<Copy SourceFiles="$(fwrt)/Downloads/Commons.Xml.Relaxng.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<!-- ICU libs -->
		<Copy SourceFiles="$(fwrt)/Downloads/icudt.lib" DestinationFolder="$(fwrt)/Lib"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<Copy SourceFiles="$(fwrt)/Downloads/icuin.lib" DestinationFolder="$(fwrt)/Lib"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<Copy SourceFiles="$(fwrt)/Downloads/icuuc.lib" DestinationFolder="$(fwrt)/Lib"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<!-- Hunspell dlls -->
		<Copy SourceFiles="$(fwrt)/DistFiles/Windows/libhunspell.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<!-- protobuf-net dlls -->
		<Unzip ZipFilename="$(fwrt)/Downloads/protobuf-net.zip" ToDir="$(fwrt)/Downloads/protobuf-net/" />
		<Copy SourceFiles="$(fwrt)/Downloads/protobuf-net/Full/net30/protobuf-net.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Windows_NT'"/>
		<Copy SourceFiles="$(fwrt)/Downloads/protobuf-net/Full/mono/protobuf-net.dll" DestinationFolder="$(dir-outputBase)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Condition="'$(OS)'=='Unix'"/>
		<ForceDelete Files="$(fwrt)/Downloads/protobuf-net/" />
		<!-- Copy the downloaded artifacts -->
		<Copy SourceFiles="@(DownloadedFiles)" DestinationFolder="$(dir-outputBase)"
			SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>

		<!-- XULRunner files -->
		<Message Text="Unzipping XULRunner." Condition="'$(OS)'=='Windows_NT'"/>
		<Unzip ZipFilename="$(fwrt)/Downloads/xulrunner-29.0.1.en-US.win32.zip" ToDir="$(dir-outputBase)" Condition="'$(OS)'=='Windows_NT'"/>
	</Target>

	<Target Name="setRegistryValues" DependsOnTargets="initLinux;initWindows;setKeysInHKLM;setKeysInHKCU"/>

	<!-- This target only has an effect on Windows machines, and should be removed once encoding converters are updated to look in HKCU by default -->
	<Target Name="setKeysInHKLM" Condition="'$(UserIsAdmin)'=='True'">
		<WriteRegistry Hive="LocalMachine"
						 Key="SOFTWARE\SIL\SilEncConverters40\RootDir"
						 Value="$(fwrt)\DistFiles\Windows\EC Common"/>
		<WriteRegistry Hive="LocalMachine"
						 Key="SOFTWARE\SIL\SilEncConverters40\DeveloperPluginDir"
						 Value="$(fwrt)\DistFiles\Windows\EC\EC\Plugins"/>
	</Target>

	<Target Name="setKeysInHKCU">
		<Message Text="Setting registry values for $(fwrt)."/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\FieldWorks\$(FWMAJOR)\RootCodeDir"
			Value="$(dir-fwdistfiles)"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\FieldWorks\$(FWMAJOR)\RootDataDir"
			Value="$(dir-fwdistfiles)"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\FieldWorks\$(FWMAJOR)\ProjectsDir"
			Value="$(dir-fwdistfiles)\Projects"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\Icu$(IcuVersion)DataDir"
			Value="$(dir-icuData)"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\SilEncConverters40\RootDir"
			Value="$(fwrt)\DistFiles\Windows\EC Common"
			Condition="'$(OS)'=='Windows_NT'"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\SilEncConverters40\DeveloperPluginDir"
			Value="$(fwrt)\DistFiles\Windows\EC\EC\Plugins"
			Condition="'$(OS)'=='Windows_NT'"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\SilEncConverters40\RootDir"
			Value="/usr/lib/fieldworks"
			Condition="'$(OS)'=='Unix'"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\SilEncConverters40\DeveloperPluginDir"
			Value="/usr/lib/fieldworks/EC/Plugins"
			Condition="'$(OS)'=='Unix'"/>

		<MakeDir Directories="$(fwrt)/DistFiles/SIL/Repository"/>
		<WriteRegistry Hive="CurrentUser"
			Key="$(BUILDAGENT_HKCU)SOFTWARE\SIL\EncodingConverterRepository\Registry"
			Value="$(fwrt)/DistFiles/SIL/Repository/mappingRegistry.xml"/>
	</Target>

	<ItemGroup>
		<IcuDataSources Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/data/*.*" />
	</ItemGroup>
	<ItemGroup>
		<IcuDataZipFiles Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/UnicodeDataOverrides.txt" />
		<IcuDataZipFiles Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l/nfc_fw.nrm" />
		<IcuDataZipFiles Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l/nfkc_fw.nrm" />
	</ItemGroup>
	<Target Name="GenerateIcuData" Inputs="@(IcuDataSources)" Outputs="$(fwrt)/DistFiles/Icu$(IcuVersion).zip" DependsOnTargets="CopyDlls">
		<Copy SourceFiles="$(fwrt)/DistFiles/Icu$(IcuVersion)/data/UnicodeDataOverrides.txt" DestinationFolder="$(fwrt)/DistFiles/Icu$(IcuVersion)"
				SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>
		<MakeDir Directories="$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l" />
		<PropertyGroup>
			<gennorm2 Condition="'$(OS)'=='Windows_NT'">$(dir-outputBase)\gennorm2.exe</gennorm2>
			<gennorm2 Condition="'$(OS)'=='Unix'">$(fwrt)/Lib/src/icu/install$(arch)/sbin/gennorm2</gennorm2>
		</PropertyGroup>
		<Exec Command='"$(gennorm2)" -o "$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l/nfc_fw.nrm" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfc.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfcHebrew.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfcOverrides.txt"' />
		<Exec Command='"$(gennorm2)" -o "$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l/nfkc_fw.nrm" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfc.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfcHebrew.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfkc.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfcOverrides.txt" "$(fwrt)/DistFiles/Icu$(IcuVersion)/data/nfkcOverrides.txt"' />
		<Zip Source="@(IcuDataZipFiles)" WorkingDirectory="$(fwrt)/DistFiles" Destination="$(fwrt)/DistFiles/Icu$(IcuVersion).zip" />
	</Target>

	<ItemGroup>
		<IcuDataFiles Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/*.*"/>
		<IcuDataFiles Include="$(fwrt)/DistFiles/Icu$(IcuVersion)/icudt$(IcuVersion)l/*.*"/>
	</ItemGroup>
	<Target Name="IcuData" DependsOnTargets="GenerateIcuData">
		<Delete Files="$(IcuDataFiles)" TreatErrorsAsWarnings="true"/>
		<Unzip ZipFilename="$(fwrt)/DistFiles/Icu$(IcuVersion).zip" ToDir="$(fwrt)/DistFiles"/>
	</Target>
</Project>
