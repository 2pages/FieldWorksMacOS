<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="all" InitialTargets="Setup" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup Condition="'$(OS)'=='Unix'">
		<build4ux>1</build4ux>
	</PropertyGroup>

	<!-- call preparatory Linux targets -->
	<Target Name="initLinux" Condition="'$(OS)'=='Unix'" DependsOnTargets="Initialize;unitpp;tlbs-copy;teckit;linuxLibs;setupLinuxRegistry;graphite2Linux"
			Inputs="$(dir-fwdistfiles)/strings-en.txt" Outputs="$(dir-outputBase)/strings-en.txt">
		<Copy SourceFiles="$(dir-fwdistfiles)/strings-en.txt"
			  DestinationFolder="$(dir-outputBase)"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
			  Condition="'$(action)'!='clean'"/>
	</Target>

	<Target Name="cleanLinux" Condition="'$(OS)'=='Unix'" DependsOnTargets="clean-graphite2Linux">
	</Target>

	<Target Name="LinuxRegistry" Condition="'$(OS)'=='Unix'" DependsOnTargets="setupLinuxRegistry;setRegistryValues"/>

	<Target Name="unitpp" Condition="'$(OS)'=='Unix'">
		<Make Makefile="$(fwrt)/Makefile" Target="Unit++-package" Configuration="$(config-capital)" BuildRoot="$(fwrt)" WorkingDirectory="$(fwrt)"/>
	</Target>

	<Target Name="tlbs-copy" Condition="'$(action)'!='clean'"
			Inputs="$(fwrt)/Lib/linux/Common/**/*.*" Outputs="$(dir-fwoutputCommon)/**/*.*">
		<ItemGroup>
			<LinuxCommonFiles Include="$(fwrt)/Lib/linux/Common/*.*" />
			<LinuxRawCommonFiles Include="$(fwrt)/Lib/linux/Common/Raw/**/*.*" />
		</ItemGroup>

		<MakeDir Directories="$(dir-fwoutputCommon)"/>
		<Copy SourceFiles="@(LinuxCommonFiles)"
			  DestinationFolder="$(dir-fwoutputCommon)"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>

		<MakeDir Directories="$(dir-fwoutputCommon)/Raw"/>
		<Copy SourceFiles="@(LinuxRawCommonFiles)"
			  DestinationFolder="$(dir-fwoutputCommon)/Raw"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"/>
	</Target>

	<!-- Copy (or delete copied) TECKit files -->
	<Target Name="teckit">
		<PropertyGroup>
			<teckit-ext Condition="'$(arch)'!='x86_64'">x86</teckit-ext>
			<teckit-ext Condition="'$(arch)'=='x86_64'">x86_64</teckit-ext>
		</PropertyGroup>
		<ItemGroup>
			<CopyTECkitFiles Include="$(dir-fwdistfiles)/libTECkit_*$(teckit-ext).so" />
			<DeleteTECkitFiles Include="$(dir-outputBase)/libTECkit_*$(teckit-ext).so" />
		</ItemGroup>
		<Copy SourceFiles="@(CopyTECkitFiles)"
			  DestinationFolder="$(dir-outputBase)"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
			  Condition="'$(action)'!='clean'"/>
		<Delete Files="@(DeleteTECkitFiles)" Condition="'$(action)'=='clean'"/>
	</Target>

	<Target Name="linuxLibs">
		<ItemGroup>
			<LinuxReleaseLibs Include="$(dir-fwoutputlibPlatform)/Release/*.*" />
			<LinuxECPlugins Include="/usr/lib/fieldworks/EC/Plugins/*.xml" />
			<LinuxECLibs Include="/usr/lib/fieldworks/*EC.dll;/usr/lib/fieldworks/*EC.dll.config" />
			<LinuxECLibs Include="/usr/lib/fieldworks/ECInterfaces.dll" />
			<LinuxECLibs Include="/usr/lib/fieldworks/SilEncConverters*.dll;/usr/lib/fieldworks/SilEncConverters*.dll.config" />
			<LinuxECLibs Include="/usr/lib/fieldworks/libIcu*.so" />
			<LinuxECLibs Include="/usr/lib/fieldworks/libPyScriptEncConverter*.so" />
			<LinuxECLibs Include="/usr/lib/fieldworks/libTECkit*.so" />
			<LinuxECLibs Include="/usr/lib/fieldworks/libecdriver*.so" />
		</ItemGroup>

		<Exec Command="make externaltargets" WorkingDirectory="$(fwrt)" Condition="'$(action)'!='clean'"/>
		<Exec Command="make externaltargets-test" WorkingDirectory="$(fwrt)"
			IgnoreStandardErrorWarningFormat="true" Condition="'$(action)'=='test'"/>

		<Copy SourceFiles="@(LinuxReleaseLibs)"
			  DestinationFolder="$(dir-outputBase)"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
			  Condition="'$(action)'!='clean'"/>
		<Message Text="Copying EC files from /usr/lib/fieldworks" />
		<Copy SourceFiles="@(LinuxECLibs)"
			  DestinationFolder="$(dir-outputBase)"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
			  Condition="'$(action)'!='clean'"/>
		<Copy SourceFiles="@(LinuxECPlugins)"
			  DestinationFolder="$(dir-outputBase)/EC/Plugins"
			  SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true"
			  Condition="'$(action)'!='clean'"/>
	</Target>

	<Target Name="generateLinuxIdlFiles">
		<MSBuild Projects="$(fwrt)/Src/ViewsInterfaces/ViewsInterfaces.csproj"
			Targets="Restore;generateLinuxIdlFiles"
			Properties="$(msbuild-props);IntermediateOutputPath=$(dir-fwobj)/ViewsInterfaces/;DefineConstants=$(ViewsInterfacesDefines);$(warningsAsErrors);WarningLevel=4"/>
	</Target>

	<Target Name="setupLinuxRegistry" DependsOnTargets="GenerateVersionFiles" Condition="'$(OS)'=='Unix'">
		<MakeDir Directories="$(fwrt)/DistFiles/Editorial Checks"/>
		<!-- we use our own copy of the registry, so permissions aren't a problem -->
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\EncodingConverterRepository\MoveRepositoryTo"
					   Value="$(fwrt)/DistFiles/MoveRepositoryTo"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\EncodingConverterRepository\Registry"
					   Value="$(fwrt)/DistFiles/SIL/Repository/mappingRegistry.xml"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\Microsoft\.NETFramework\AssemblyFolders\Primary Interop Assemblies"
					   Value="$(dir-outputBase)"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\InitIcu"
					   Value="1"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\FieldWorks\$(GitVersion_Major)\RootDataDir"
					   Value="$(dir-fwdistfiles)"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\FieldWorks\$(GitVersion_Major)\RootCodeDir"
					   Value="$(dir-fwdistfiles)"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\FieldWorks\$(GitVersion_Major)\ProjectsDir"
					   Value="$(fwrt)/Projects"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\Icu54DataDir"
					   Value="$(dir-icuData)/icudt54l"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\Icu54Dir"
					   Value="$(dir-icuData)"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\SilEncConverters40\PluginDir"
					   Value="$(dir-outputBase)/EC/Plugins"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\SilEncConverters40\RootDir"
					   Value="$(dir-outputBase)"/>
		<!-- These are obsolete, as far as I know. -->
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\Firebird Project\Firebird Server\Instances\DefaultInstance"
					   Value="/usr/lib/firebird/2.1"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\FieldWorks\InstallLanguageUseLog"
					   Value="False"/>
		<WriteRegistry Hive="LocalMachine"
					   Key="SOFTWARE\SIL\FieldWorks\InstallLanguageLog"
					   Value="/tmp/installLanguage.log"/>
	</Target>

	<Target Name="createCompMaps" Condition="'$(OS)'=='Unix'">
		<!--  IPictureFactory class and interface -->
		<WriteTextFile TargetFile="$(dir-outputBase)/COMInterfaces.compmap"
			FirstLine="17A2E876-2968-11E0-8046-0019DBF4566E libManagedComBridge.so COMInterfaces.dll SIL.FieldWorks.Common.COMInterfaces.ManagedPictureFactory"
			SecondLine="110B7E88-2968-11E0-B493-0019DBF4566E libManagedComBridge.so"/>
		<!-- ViewInputManager class, ILgTextServices and IViewInputMgr interfaces -->
		<WriteTextFile TargetFile="$(dir-outputBase)/RootSite.compmap"
			FirstLine="830BAF1F-6F84-46EF-B63E-3C1BFDF9E83E libManagedComBridge.so RootSite.dll SIL.FieldWorks.Common.RootSites.ViewInputManager"
			SecondLine="5B6303DE-E635-4DD7-A7FC-345BEEF352D8 libManagedComBridge.so"
			ThirdLine="E41668F7-D506-4C8A-A5D7-FEAE5630797E libManagedComBridge.so"/>
		<WriteTextFile TargetFile="$(dir-outputBase)/ManagedVwDrawRootBuffered.compmap"
			FirstLine="97199458-10C7-49da-B3AE-EA922EA64859 libManagedComBridge.so ManagedVwDrawRootBuffered.dll SIL.FieldWorks.Views.VwDrawRootBuffered"
			SecondLine="D9E9D65F-E81F-439e-8010-5B22BAEBB92D libManagedComBridge.so"/>
		<WriteTextFile TargetFile="$(dir-outputBase)/KeyboardSwitcher.compmap"
			FirstLine="4ED1E8bC-DAdE-11DE-B350-0019DBf4566E libManagedComBridge.so KeyboardSwitcher.dll SIL.FieldWorks.Views.KeyboardSwitcher"
			SecondLine="4D2BC310-DADF-11DE-9E3A-0019DBF4566E libManagedComBridge.so"/>
		<WriteTextFile TargetFile="$(dir-outputBase)/ManagedLgIcuCollator.compmap"
			FirstLine="e771361c-ff54-4120-9525-98a0b7a9accf libManagedComBridge.so ManagedLgIcuCollator.dll SIL.FieldWorks.Language.ManagedLgIcuCollator"
			SecondLine=""/>
		<WriteTextFile TargetFile="$(dir-outputBase)/ManagedVwWindow.compmap"
			FirstLine="3fb0fcd2-ac55-42a8-b580-73b89a2b6215 libManagedComBridge.so ManagedVwWindow.dll SIL.FieldWorks.Views.ManagedVwWindow"
			SecondLine="8856396c-63a9-4bc7-ad47-87ec8b6ef5a4 libManagedComBridge.so"/>
	</Target>

	<ItemGroup>
		<Graphite2Sources Include="$(fwrt)/Lib/src/graphite2/src/*.*" />
	</ItemGroup>
	<Target Name="graphite2Linux" Inputs="@(Graphite2Sources)" Outputs="$(fwrt)/Lib/linux/$(config-capital)/libgraphite2.a" Condition="'$(action)'!='clean'">
		<MakeDir Directories="$(fwrt)/Lib/linux/$(config-capital)" />
		<Make Makefile="$(fwrt)/Lib/src/graphite2/Makefile"
			Configuration="$(config-capital)" Target="$(make-target)"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)/Lib/src/graphite2"/>
		<Message Text="Finished building graphite2."/>
	</Target>
	<Target Name="clean-graphite2Linux">
		<Make Makefile="$(fwrt)/Lib/src/graphite2/Makefile"
			Configuration="$(config-capital)" Target="clean"
			BuildRoot="$(fwrt)"
			WorkingDirectory="$(fwrt)/Lib/src/graphite2"/>
		<Message Text="Finished building graphite2."/>
	</Target>

	<!-- Special targets to build for packages on Linux -->
	<!-- NOTE: although it might seems that build4package-fdo and build4package-rest aren't used
		anywhere and could be merged into build4package they are still necessary and used for
		lfmerge packaging -->
	<Target Name="build4package" DependsOnTargets="build4package-clean;build4package-fdo;build4package-rest"/>

	<Target Name="build4package-clean" DependsOnTargets="CleanAll">
		<ItemGroup>
			<FilesToDelete Include="$(dir-outputBase)/*.*"/>
		</ItemGroup>
		<ForceDelete Files="@(FilesToDelete)"/>
	</Target>

	<Target Name="build4package-fdo" DependsOnTargets="Initialize;setRegistryValues;downloadDlls;allCppNoTest;FDO">
	</Target>

	<Target Name="build4package-rest" DependsOnTargets="IcuData;mkall">
	</Target>
</Project>
