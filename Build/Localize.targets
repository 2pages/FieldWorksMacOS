<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="15.0">

	<UsingTask TaskName="ListsToXliff" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="LocalizeFieldWorks" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="NormalizeLocales" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="PoToXml" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="XliffToLists" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="XmlToPo" AssemblyFile="FwBuildTasks.dll"/>
	<UsingTask TaskName="Zip" AssemblyFile="FwBuildTasks.dll"/>

	<!-- Localize strings-en.xml, lists, and all resx files -->
	<Target Name="localize" DependsOnTargets="localize-source;localize-binaries"/>
	<Target Name="localize-source" DependsOnTargets="Initialize;downloadTranslatedFiles;zipLocalizedLists;processLanguages-source"/>
	<Target Name="localize-binaries" DependsOnTargets="Initialize;processLanguages-binaries"/>

	<PropertyGroup>
		<L10nsBaseDir>$(fwrt)/Localizations</L10nsBaseDir>
		<L10nsDirectory>$(L10nsBaseDir)/l10ns</L10nsDirectory>
		<ListsDirectory>$(L10nsBaseDir)/lists</ListsDirectory>
		<MessagesPot>$(L10nsBaseDir)/messages.pot</MessagesPot>
		<CrowdinZip>$(DownloadsDir)/Crowdin.zip</CrowdinZip>
		<OnFailedCrowdinDownload Condition="Exists('$(CrowdinZip)')">WarnAndContinue</OnFailedCrowdinDownload>
		<OnFailedCrowdinDownload Condition="!Exists('$(CrowdinZip)')">ErrorAndStop</OnFailedCrowdinDownload>
	</PropertyGroup>

	<!-- Update localizable files in Crowdin -->
	<Target Name="uploadUpdatesForTranslation" DependsOnTargets="CopyLcmResxFiles">
		<ItemGroup>
			<OldXliffs Include="$(ListsDirectory)/*.xlf"/>
		</ItemGroup>
		<ForceDelete Files="@(OldXliffs)"/>
		<ListsToXliff SourceXml="$(ListsDirectory)/LocalizableLists.xml" XliffOutputDir="$(ListsDirectory)"/>
		<ForceDelete Files="$(MessagesPot)"/>
		<XmlToPo FwRoot="$(fwrt)" Output="$(MessagesPot)"/>
		<Exec WorkingDirectory="$(fwrt)" Command="overcrowdin updatefiles -v"/>
	</Target>

	<Target Name="CopyLcmResxFiles">
		<Error Text="To update localizations, liblcm must be cloned locally. Run 'build /t:UpdateDevelopmentPropertiesFile' to set the liblcm location."
			Condition="'$(UseLocalLibraries)'!='Y'"/>
		<ItemGroup>
			<LcmResxFiles Include="$(LcmArtifactsDir)/../../src/**/*.resx"/>
		</ItemGroup>
		<Message Text="@(LcmResxFiles)" />
		<Copy SourceFiles="@(LcmResxFiles)"
			DestinationFiles="@(LcmResxFiles->'$(L10nsBaseDir)/LCM/%(RecursiveDir)%(Filename)%(Extension)')"/>
	</Target>

	<!-- Download translations from Crowdin -->
	<Target Name="downloadTranslatedFiles" Condition="'$(disableDownloads)'!='true'">
		<ForceDelete Files="$(L10nsDirectory)"/>
		<Exec WorkingDirectory="$(fwrt)" Command="overcrowdin download -v -r2 -f $(CrowdinZip)" ContinueOnError="$(OnFailedCrowdinDownload)"/>
		<Unzip ZipFilename="$(CrowdinZip)" ToDir="$(L10nsDirectory)"/>
		<NormalizeLocales L10nsDirectory="$(L10nsDirectory)"/>
		<ItemGroup>
			<LocaleDirs Include="$([System.IO.Directory]::GetDirectories(&quot;$(L10nsDirectory)&quot;))"/>
		</ItemGroup>
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="postProcessDownloadedTranslation"
			Properties="LocaleDir=%(LocaleDirs.Identity);Locale=%(Filename)"/>
	</Target>

	<!-- Each downloaded translation needs the following post-processing:
			* Insert strings from messages.*.po into strings-*.xml -->
	<Target Name="postProcessDownloadedTranslation">
		<PoToXml PoFile="$(LocaleDir)/messages.$(Locale).po" StringsXml="$(LocaleDir)/strings-$(Locale).xml"/>
	</Target>

	<!-- Create and zip LocalizedLists-*.xml files to DistFiles/Templates -->
	<Target Name="zipLocalizedLists">
		<ItemGroup>
			<LocaleDirs Include="$([System.IO.Directory]::GetDirectories(&quot;$(L10nsDirectory)&quot;))"/>
		</ItemGroup>
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="combineAndZipListsForOneLocale"
			Properties="LocaleDir=%(LocaleDirs.Identity);Locale=%(Filename)"/>
	</Target>

	<!-- Combine list *.xlf files into a single .xml file for one `LocaleDir` and zip into DistFiles/Templates -->
	<Target Name="combineAndZipListsForOneLocale">
		<PropertyGroup>
			<OutputXml>$(LocaleDir)/Lists/LocalizedLists-$(Locale).xml</OutputXml>
		</PropertyGroup>
		<ItemGroup>
			<XliffFiles Include="$(LocaleDir)/Lists/*.xlf"/>
		</ItemGroup>
		<XliffToLists XliffSourceFiles="@(XliffFiles)" OutputXml="$(OutputXml)"/>
		<Zip Source="$(OutputXml)" Destination="$(fwrt)/DistFiles/Templates"/>
	</Target>

	<!-- Convert LocalizedLists-*.xml files from Localizations to xliff to upload as completed translations -->
	<Target Name="convertLocalizedListsToXliff">
		<ItemGroup>
			<ListsXmlFiles Include="$(L10nsBaseDir)/LocalizedLists-*.xml"/>
			<OldXliffFiles Include="$(ListsDirectory)/*/*.xlf"/>
		</ItemGroup>
		<ForceDelete Files="@(OldXliffFiles)"/><!-- delete early to prevent race conditions during creation -->
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="splitListsForOneLocale"
			Properties="ListsXml=%(ListsXmlFiles.Identity);BareFilename=%(Filename)"/>
	</Target>
	<Target Name="splitListsForOneLocale">
		<PropertyGroup>
			<Locale>$(BareFilename.Substring(15))</Locale><!-- there are 15 chars in 'LocalizedLists-' -->
			<XliffOutputDir>$(ListsDirectory)/$(Locale)</XliffOutputDir>
		</PropertyGroup>
		<MakeDir Directories="$(XliffOutputDir)"/>
		<ListsToXliff SourceXml="$(ListsXml)" XliffOutputDir="$(XliffOutputDir)" TargetLocale="$(Locale)"/>
	</Target>

	<!-- Copy translated .resx files and strings-<locale>.xml to their destinations -->
	<Target Name="processLanguages-source">
		<LocalizeFieldWorks RootDirectory="$(fwrt)" Config="$(config-capital)" Build="SourceOnly"/>
	</Target>

	<!-- Build localized dll's -->
	<Target Name="processLanguages-binaries">
		<!-- REVIEW (Hasso) 2020.01: what does this copy? -->
		<ItemGroup>
			<LocalizationFiles Include="$(fwrt)/Localizations/Output/**/*.*" Condition="Exists('$(fwrt)/Localizations/Output')"/>
		</ItemGroup>
		<Copy SourceFiles="@(LocalizationFiles)"
			DestinationFiles="@(LocalizationFiles->'$(fwrt)/Output/%(RecursiveDir)%(Filename)%(Extension)')"
			SkipUnchangedFiles="true"/>

		<LocalizeFieldWorks RootDirectory="$(fwrt)" Config="$(config-capital)" Build="BinaryOnly"/>
	</Target>

</Project>
