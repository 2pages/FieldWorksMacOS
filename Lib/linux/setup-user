#!/bin/bash
# Copyright (c) 2014 SIL International
# This software is licensed under the LGPL, version 2.1 or later
# (http://www.gnu.org/licenses/lgpl-2.1.html)
#
# see http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html for standard
# locations and environment variables

XDG_DATA_HOME=${XDG_DATA_HOME:-${HOME}/.local/share}
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-${HOME}/.config}

scriptdir="$(dirname "$0")"
prefix=$(cd "$scriptdir/../.."; /bin/pwd)
FW_DATA="${XDG_DATA_HOME}/fieldworks"
FW_CONFIG="${XDG_CONFIG_HOME}/fieldworks"
FW_LIB=$prefix/lib/fieldworks
FW_SHARE=$prefix/share/fieldworks

WRITEKEY="${FW_LIB}/WriteKey.exe"
READKEY="${FW_LIB}/ReadKey.exe"

# For example: CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "ProjectsDir" LM "Software/SIL/FieldWorks/8" "ProjectsDir"
CopyRegistryKey()
{
	SOURCE_ROOT="$1"
	SOURCE_LOCATION="$2"
	SOURCE_KEY="$3"

	DESTINATION_ROOT="$4"
	DESTINATION_LOCATION="$5"
	DESTINATION_KEY="$6"

	mono "${WRITEKEY}" "$DESTINATION_ROOT" "$DESTINATION_LOCATION" "$DESTINATION_KEY" \
		$(mono "${READKEY}" "$SOURCE_ROOT" "$SOURCE_LOCATION" "$SOURCE_KEY")
}

(
	if [ ! -d "${FW_CONFIG}/Icu50/" ]; then
		echo "# Copying ICU data"
		mkdir -p "${FW_CONFIG}/Icu50/"
		cp -a "${FW_SHARE}/Icu50/icudt50l" "${FW_CONFIG}/Icu50/"
		cp -a "${FW_SHARE}/Icu50/data" "${FW_CONFIG}/Icu50/"
	fi

	if [ ! -d "${FW_CONFIG}/SIL/" ]; then
		echo "# Copying encoding converter registry"
		mkdir -p "${FW_CONFIG}/"
		cp -a "${FW_SHARE}/SIL" "${FW_CONFIG}/"
	fi

	if [ ! -d "${FW_DATA}/Projects/" ]; then
		echo "# Creating default Project database directory"
		mkdir -p "${FW_DATA}/Projects/"
	fi

	# if we haven't setup running the remote access daemon yet, set it up and start it.
	if [ ! -f "${XDG_CONFIG_HOME}/autostart/ShareFwProjects.desktop" ]; then
		echo "# Starting remote access"
		mkdir -p "${XDG_CONFIG_HOME}/autostart"
		cp -a "${FW_SHARE}/ShareFwProjects.desktop" "${XDG_CONFIG_HOME}/autostart"
		${FW_LIB}/ShareFwProjects
	fi

	mkdir -p "${FW_CONFIG}/SIL/Repository"
	mkdir -p "${FW_CONFIG}/MoveRepositoryTo"

	# Set registry keys

	cd "$FW_LIB"; RUNMODE="INSTALLED" . environ; cd "$OLDPWD"

	# If there aren't registry keys yet, set some defaults
	if [ ! -d "${FW_CONFIG}/registry/LocalMachine/software/sil/fieldworks" ]; then
		echo "# Setting configuration"

		# REVIEW these were taken from nant setup registry may not be correct for an install.
		if [ ! -d "${FW_CONFIG}/registry/LocalMachine/software/sil/encodingconverterrepository" ]; then
			mono "${WRITEKEY}" LM "Software/SIL/EncodingConverterRepository" "Registry" "${FW_CONFIG}/SIL/Repository/mappingRegistry.xml"
			mono "${WRITEKEY}" LM "Software/SIL/EncodingConverterRepository" "MoveRepositoryTo" "${FW_CONFIG}/MoveRepositoryTo"
		fi
		mono "${WRITEKEY}" LM "Software/Microsoft/.NETFramework/AssemblyFolders" "Primary Interop Assemblies" "$FW_LIB"
		mono "${WRITEKEY}" LM "Software/SIL" "InitIcu" "1"
		mono "${WRITEKEY}" LM "Software/SIL/FieldWorks" "InstallLanguageUseLog" "False"

		mono "${WRITEKEY}" LM "Software/SIL/FieldWorks/8" "RootDataDir" "${FW_CONFIG}/"
		mono "${WRITEKEY}" LM "Software/SIL/FieldWorks/8" "RootCodeDir" "${FW_SHARE}"
		mono "${WRITEKEY}" LM "Software/SIL/FieldWorks/8" "ProjectsDir" "${FW_DATA}/Projects"
	fi

	# If there aren't version 8 registry keys yet, migrate them from the version 7 registry keys.
	if ! mono "${READKEY}" LM "Software/SIL/FieldWorks/8" "ProjectsDir" ; then
		# Write any default settings for keys that are new in version 8.
		# None.

		# Migrate any settings from version 7 to version 8.
		CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "RootDataDir" LM "Software/SIL/FieldWorks/8" "RootDataDir"
		CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "RootCodeDir" LM "Software/SIL/FieldWorks/8" "RootCodeDir"
		CopyRegistryKey LM "Software/SIL/FieldWorks/7.0" "ProjectsDir" LM "Software/SIL/FieldWorks/8" "ProjectsDir"
	fi

	# Set values unconditionally, to take care of upgrades
	# TODO: implement a WriteKey option to only set and not overwrite values. See comments in FWNX-1065.
	# TODO: implement batch load/dump in WriteKey similar to dconf

	echo "# Updating configuration"

	mono "${WRITEKEY}" LM "Software/SIL" "Icu50DataDir" "${FW_CONFIG}/Icu50/icudt50l"
	mono "${WRITEKEY}" LM "Software/SIL" "Icu50Dir" "${FW_CONFIG}/Icu50"

	mono "${WRITEKEY}" LM "Software/SIL/SilEncConverters40" "PluginDir" "${FW_LIB}/EC/Plugins"
	mono "${WRITEKEY}" LM "Software/SIL/SilEncConverters40" "RootDir" "${FW_LIB}"

) | zenity --progress \
	--title="User specific setup" \
	--percentage=0 \
	--pulsate \
	--auto-close
