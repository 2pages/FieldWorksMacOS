;A file of simulfix rules.
(load_nat_class message <nat_class name null features ()>)
(load_nat_class message <nat_class name C features (cons +)>)
(load_nat_class message <nat_class name V features (voc +)>)
(load_nat_class message <nat_class name voiced features (vd +)>)
(load_nat_class message <nat_class name nonround features (round -)>)
(load_nat_class message <nat_class name p features (cons + poa bilabial nasal - vd -)>)

;A simulfix on the last segment of the stem:
; voices a word-final voiced bilabial stop
(load_morpher_rule message
  <mrule  nm simulfix
		  str allophonic
		  r_pos (V)
		  r_hf (pers (1 2 3))
		  hf (pers (3))
		  gl SIMUL
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1
												seq (<simp_cntxt class null>)>)
													 (<simp_cntxt class p>)
									 )
						 >
					  out <m_rhs p_out (1 (2 <simp_cntxt class voiced>))>
					>
				   )
  >
)
;We'll trace the rule, to watch its application (msg 6535):
(trace_morpher_rule message (true true simulfix))
;Also trace lex lookup:
(trace_lexical_lookup message true)
;Now test (1x ambiguity):
(morph_and_lookup_word pretty_print pib)

;Now revise the rule so the simulfix is on the first segment of the stem:
(load_morpher_rule message
  <mrule  nm simulfix
		  str allophonic
		  r_pos (V)
		  r_hf (pers (1 2 3))
		  hf (pers (3))
		  gl SIMUL
		  subrules (<msub
					  in <m_lhs pseq ((<simp_cntxt class p>)
									  (<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>)
									 )
						 >
					  out <m_rhs p_out ((1 <simp_cntxt class voiced>) 2)>
					>
				  )
  >
)
;Test (1x ambiguity):
(morph_and_lookup_word pretty_print bip)

;And revise the rule so the simulfix consists in unrounding the first vowel,
; which in the example happens to be word-internal (since we've already tested
; word-initial and word-final simulfixes).
; (Hey, nobody said these rules need to be realistic!)
(load_morpher_rule message
  <mrule  nm simulfix
		  str allophonic
		  r_pos (N)
		  r_hf (pers (1 2 3))
		  hf (pers (3))
		  gl SIMUL
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 0 max 1 seq (<simp_cntxt class C>)>)
									  (<simp_cntxt class V>)
									  (<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>)
									 )
						 >
					  out <m_rhs p_out (1 (2 <simp_cntxt class nonround>) 3)>
					>
				  )
  >
)
;Test (1x ambiguity):
(morph_and_lookup_word pretty_print bÅpu)

;Finally, revise the rule so the simulfix consists in unrounding a series of
; vowels (which might be one representation of a long vowel).
(load_morpher_rule message
  <mrule  nm simulfix
		  str allophonic
		  r_pos (N)
		  r_hf (pers (1 2 3))
		  hf (pers (3))
		  gl SIMUL
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 0 max 1 seq (<simp_cntxt class C>)>)
									  (<opt_seq min 1 max 2 seq (<simp_cntxt class V>)>)
									  (<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>)
									 )
						 >
					  out <m_rhs p_out (1 (2 <simp_cntxt class nonround>) 3)>
					>
				  )
  >
)
;Test (1x ambiguity):
(morph_and_lookup_word pretty_print sÅÅpu)

;Now remove the rule (msg 6506):
(remove_morpher_rule message simulfix)
;And the natural classes (msg 6542):
(remove_nat_class message null)
(remove_nat_class message C)
(remove_nat_class message V)
(remove_nat_class message voiced)
(remove_nat_class message nonround)
(remove_nat_class message p)
