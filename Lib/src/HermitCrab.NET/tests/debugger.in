;Test tracing of most things.  (However, tracing of blocking is tested
; in MRULES).
(morpher_input_from_file message c:\data\hc\morpher\tests\startup.in)
;Don't let abort make us quit:
(morpher_set message (*quit_on_error* false))
;Set tracing on all rules; should succeed (msg 6539)
; even though we don't have any rules:
(trace_morpher_rule message (true true))

;Load the nat classes (msg 6541):
(load_nat_class message <nat_class name bilab_cons features (cons + voc - poa bilabial)>)
(load_nat_class message <nat_class name alv_cons   features (cons + voc - poa alveolar)>)
(load_nat_class message <nat_class name asp  features (asp +)>)
(load_nat_class message <nat_class name noncons    features (cons -)>)

;Then load some prules (msg 6505, twice):
(load_morpher_rule message
  <prule  nm rule1
		  str (allophonic)
		  in_pseq (<simp_cntxt class bilab_cons>)
		  subrules (<psub out_pseq (<simp_cntxt class asp>)
			  right_environ <ptemp pseq (<simp_cntxt class noncons>)>
		>
	   )
  >
)
(load_morpher_rule message
  <prule  nm rule2
		  str (allophonic morphophonemic)
		  in_pseq (<simp_cntxt class alv_cons>)
	subrules (<psub r_pos (N) r_rf (latinate) x_rf (germ)
		out_pseq (<simp_cntxt class asp>)
		left_environ <ptemp pseq (<simp_cntxt class noncons>) init true>
		right_environ <ptemp pseq (<simp_cntxt class noncons>)>
		>
	   )
  >
)
;List traced morpher rules, expect (() ()):
(list_traced_morpher_rules pretty_print )
;Now set tracing on a nonexistent rule (error msg m6017):
(trace_morpher_rule message (true true nonesuch))

;Now run through the various options on tracing rules, checking each:
;m6533:
(trace_morpher_rule message (false true rule1))
;Test, expect (() (rule1)):
(list_traced_morpher_rules pretty_print )

;m6534:
(trace_morpher_rule message (true false rule1))
;Test, expect ((rule1) ()):
(list_traced_morpher_rules pretty_print )

;m6535:
(trace_morpher_rule message (true true rule1))
;Test, expect ((rule1) (rule1)):
(list_traced_morpher_rules pretty_print )

;m6532:
(trace_morpher_rule message (false false rule1))
;Test, expect (() ()):
(list_traced_morpher_rules pretty_print )

;m6537:
(trace_morpher_rule message (false true))
;Test, expect (() (rule1 rule2)):
(list_traced_morpher_rules pretty_print )

;m6538:
(trace_morpher_rule message (true false))
;Test, expect ((rule1 rule2) ()):
(list_traced_morpher_rules pretty_print )

;m6536:
(trace_morpher_rule message (false false))
;Test, expect (() ()):
(list_traced_morpher_rules pretty_print )

;m6539 (on for all rules in both anal and synth mode, which is where we leave it):
(trace_morpher_rule message (true true))
;Test, expect ((rule1 rule2) (rule1 rule2)):
(list_traced_morpher_rules pretty_print )
;Now we morph a word; should see tracing of rules only:
(morph_and_lookup_word pretty_print pHit)

;Turn off tracing of rules:
(trace_morpher_rule message (false false))
;Now turn off tracing of lexical lookup (it's already off, but we should still
; get msg m6528):
(trace_lexical_lookup message false)
;Turn on tracing of lex lookup (m6527):
(trace_lexical_lookup message true)
;Now we morph a word; should see tracing of lex lookup only:
(morph_and_lookup_word pretty_print pHit)

;Turn tracing of rules back on:
(trace_morpher_rule message (true true))
;Now we morph a word; should see tracing of lex lookup and rules both:
(morph_and_lookup_word pretty_print pHit)

;Turn tracing of strata on (msg 6548):
(trace_morpher_strata message (true true))
;Morph a word; should see tracing of lex lookup, rules, and strata:
(morph_and_lookup_word pretty_print pHit)

;Turn off tracing of input of rules:
(morpher_set message (*trace_inputs* false))
;Morph a word; should see tracing like before, except no "in" field on rules:
(morph_and_lookup_word pretty_print pHit)
;Resume tracing of input of rules:
(morpher_set message (*trace_inputs* true))

;Ff. should trigger error msg 6035 in middle of trace, but not abort tracing
; (because *quit_on_error* is false):
(morph_and_lookup_word pretty_print sat)

;Turn off display of glosses; 'gl' field should disappear:
(morpher_set message (*show_glosses* false))
(morph_and_lookup_word pretty_print sat)

;Turn all tracing off (msgs 6536, 6528, and 6545):
(trace_morpher_rule message (false false))
(trace_lexical_lookup message false)
(trace_morpher_strata message (false false))
;Now we morph a word; should not see tracing:
(morph_and_lookup_word pretty_print pHit)

;Turn on tracing just for strata (msg 6548):
(trace_morpher_strata message (true true))
;Morph a word; should see tracing of strata only:
(morph_and_lookup_word pretty_print pHit)

;Turn on tracing for strata during analysis (msg 6547):
(trace_morpher_strata message (true false))
;Morph a word; should see tracing of strata during analysis only:
(morph_and_lookup_word pretty_print pHit)

;Turn on tracing for strata during synthesis (msg 6546):
(trace_morpher_strata message (false true))
;Morph a word; should see tracing of strata during synthesis only:
(morph_and_lookup_word pretty_print pHit)

;Remove the rules:
(remove_morpher_rule message rule1)
(remove_morpher_rule message rule2)
;...and the natural classes:
(remove_nat_class message bilab_cons)
(remove_nat_class message alv_cons)
(remove_nat_class message asp)
(remove_nat_class message noncons)

;Done; morpher will now terminate
(terminate_morpher x)
