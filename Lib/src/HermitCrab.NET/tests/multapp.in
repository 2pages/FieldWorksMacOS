;Test simultaneous vs. multiple application.
;First load the nat classes (msg 6541):
(load_nat_class message <nat_class name high_v    features (cons - voc + high +)>)
(load_nat_class message <nat_class name back_rnd  features (back + round +)>)
(load_nat_class message <nat_class name i         features (cons - voc + high + back - round -)>)
(load_nat_class message <nat_class name C         features (cons + voc -)>)

(morpher_set message (*quit_on_error* false))
;First we load a rule as simultaneous app:
; i --> u / iC__
(load_morpher_rule message
  <prule  nm rule1
		  str (allophonic)
		  mult_applic simultaneous
		  in_pseq (<simp_cntxt class high_v>)
		  subrules (<psub out_pseq (<simp_cntxt class back_rnd>)
						  left_environ <ptemp pseq (<simp_cntxt class i><simp_cntxt class C>)>
					>
				   )
  >
)
;Trace it:
(trace_morpher_rule message (true true rule1))
;And test it:
(morph_and_lookup_word pretty_print gigugu)

;Now we reload the same rule, but lr_iterative:
(load_morpher_rule message
  <prule  nm rule1
		  str (allophonic)
		  mult_applic lr_iterative
		  in_pseq (<simp_cntxt class high_v>)
		  subrules (<psub out_pseq (<simp_cntxt class back_rnd>)
						  left_environ <ptemp pseq (<simp_cntxt class i><simp_cntxt class C>)>
					>
				   )
  >
)
;And test it:
(morph_and_lookup_word pretty_print gigugi)

(morpher_set message (*quit_on_error* true))

;Remove the rule:
(remove_morpher_rule message rule1)
;...and the natural classes:
(remove_nat_class message high_v)
(remove_nat_class message back_rnd)
(remove_nat_class message i)
(remove_nat_class message C)
