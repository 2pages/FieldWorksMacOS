;A file of simple suffix rules
(load_nat_class message <nat_class name null features ()>)
(load_nat_class message <nat_class name C features (cons +)>)
(load_nat_class message <nat_class name alv_stop features (cons + strident - del_rel - poa alveolar nasal - asp -)>)
(load_nat_class message <nat_class name voiceless_c features (cons + vd -)>)
(load_nat_class message <nat_class name labiodental features (cons + poa labiodental)>)
(load_nat_class message <nat_class name voiced features (vd +)>)
(load_nat_class message <nat_class name strident features (cons + strident +)>)
(load_nat_class message <nat_class name cons features (cons +)>)
(load_nat_class message <nat_class name unasp features (asp -)>)
(load_nat_class message <nat_class name d features (cons + strident - del_rel - poa alveolar nasal - vd +)>)

;Load two mrules (msg 6505, twice):
; English -s suffix: "Ås" after strident C (that's a barred i), "s" after other voiceless C,
; "z" otherwise.
(load_morpher_rule message
  <mrule  nm s_suffix
		  str morphophonemic
		  r_pos (V)
		  r_hf (pers (1 2 3))
		  hf (pers (3))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>
									   <simp_cntxt class strident>
									  )
									 )
						 >
					  out <m_rhs p_out (1 (Åz table3))>
					>
					<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>
									   <simp_cntxt class voiceless_c>
									  )
									 )
						 >
					  out <m_rhs p_out (1 (s table3))>
					>
					<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
; English -ed suffix: "Åd" (= barred-i + d) after t or d, "t" after other voiceless C,
; "d" otherwise.  We'll put in a bdry marker this time.  (Note that the third subrule uses a natural class,
; instead of a string + char table; this is to test the use of natural classes in the output.)
; In the first subrule, we arbitrarily leave the two contexts "unbundled".
(load_morpher_rule message
  <mrule  nm ed_suffix
		  str morphophonemic
		  r_pos (V)
		  r_hf (tense (past pres))
		  hf (tense (past))
		  gl PAST
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>)
									  (<simp_cntxt class alv_stop>)
									 )
						 >
					  out <m_rhs p_out (1 2 (+Åd table3))>
					>
					<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>
									   <simp_cntxt class voiceless_c>
									  )
									 )
						 >
					  out <m_rhs p_out (1 (+t table3))>
					>
					<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (+ table3) <simp_cntxt class d>)>
					>
				  )
  >
)
; t -> th / C__
; This rule needed to ensure that the "t" of the suffix becomes unambiguously xlatable
(load_morpher_rule message
  <prule  nm rule1
		  str (allophonic)
		  in_pseq (<seg rep t ctable table3>)
		  subrules (<psub out_pseq (<simp_cntxt class unasp>)
						  left_environ <ptemp pseq (<simp_cntxt class cons>)>
					>
				   )
  >
)
;We'll trace the mrules, to watch their application (msg 6535, 2x):
(trace_morpher_rule message (true true s_suffix))
(trace_morpher_rule message (true true ed_suffix))
;Also trace lex lookup:
(trace_lexical_lookup message true)
;Now we morph a few words; each should be unambiguous:
(morph_and_lookup_word pretty_print sagz)
(morph_and_lookup_word pretty_print sagd)
(morph_and_lookup_word pretty_print sasÅz)
(morph_and_lookup_word pretty_print sast)
(morph_and_lookup_word pretty_print sazd)
;The following words should fail to morph:
(morph_and_lookup_word pretty_print sagÅs)
(morph_and_lookup_word pretty_print sags)
(morph_and_lookup_word pretty_print sasz)
(morph_and_lookup_word pretty_print sass)
(morph_and_lookup_word pretty_print satÅs)
(morph_and_lookup_word pretty_print satz)

;Now load a revised version of the ed_suffix rule, which uses alpha vars to
; collapse two subrules into one:
(load_morpher_rule message
  <mrule  nm ed_suffix
		  str morphophonemic
		  r_pos (V)
		  r_hf (tense (past pres))
		  hf (tense (past))
		  gl PAST
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>)
									  (<simp_cntxt class alv_stop>)
									 )
						 >
					  out <m_rhs p_out (1 2 (+Åd table3))>
					>
					<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>
									   <simp_cntxt class C alpha_vars (a +)>
									  )
									 )
						 >
					  out <m_rhs p_out (1 <simp_cntxt class alv_stop alpha_vars (a +)>)>
					  var_fs (a vd)
					>
				  )
  >
)
;Test it (each word should be unambiguous):
(morph_and_lookup_word pretty_print sagd)
(morph_and_lookup_word pretty_print sast)
(morph_and_lookup_word pretty_print sazd)


;Now we'll remove those rules (msg 6506):
(remove_morpher_rule message s_suffix)
(remove_morpher_rule message ed_suffix)
;Remove the phonological rule we loaded at the beginning:
(remove_morpher_rule message rule1)
;And the natural classes (msg 6542):
(remove_nat_class message null)
(remove_nat_class message alv_stop)
(remove_nat_class message voiceless_c)
(remove_nat_class message labiodental)
(remove_nat_class message voiced)
(remove_nat_class message strident)
(remove_nat_class message cons)
(remove_nat_class message unasp)
