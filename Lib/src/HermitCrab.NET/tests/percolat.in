;Test percolation of Head and Foot features.  We use the following
; lex entries:
;                  Head Feats
;             ---------------------
; Perc0         (           num (pl))
; Perc1         (pers (1)   num (pl))
; Perc2         (pers (3)   num (pl))
; Perc3         (pers (2 3) num (pl))
; Perc4         (pers (1 3) num (pl))
; ...and rules:
;              Req'd Head Feats        (Assigned) Head Feats
;             ----------------------------------------------
; Rule1A      (pers (2))               (pers (2))
; Rule1B      (pers (2 3))             (pers (2))
; Rule2A      (pers (2))               (pers (3))
; Rule2B      (pers (2 3))             (pers (3))
; Rule3       (pers (4))               (pers (3))
; Rule4A      (pers (2))                ---
; Rule4B      (pers (2 3))              ---
;
;The head features expected in the output Lex Entries are as follows
; (num (pl) is expected in every case where there is a valid output;
; "*" indicates no output is expected):
;              Perc0         Perc1      Perc2        Perc3        Perc4
;             -------------------------------------------------------------
; Rule1A      (pers (2))       *          *        (pers (2))       *
; Rule1B      (pers (2))       *     (pers (2))    (pers (2))    (pers (2))
; Rule2A      (pers (3))       *          *        (pers (3))       *
; Rule2B      (pers (3))       *     (pers (3))    (pers (3))    (pers (3))
; Rule3       (pers (3))       *          *           *             *
; Rule4A      (pers (2))       *          *        (pers (2))       *
; Rule4B      (pers (2 3))     *     (pers (3))    (pers (2 3))  (pers (3))

(load_nat_class message <nat_class name null features ()>)
;Rule1A
(load_morpher_rule message
  <mrule  nm Rule1A
		  str morphophonemic
		  r_hf (pers (2))
		  hf (pers (2))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 2x ambig, output head feats (pers (2) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule1A with Rule1B:
(remove_morpher_rule message Rule1A)
(load_morpher_rule message
  <mrule  nm Rule1B
		  str morphophonemic
		  r_hf (pers (2 3))
		  hf (pers (2))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 4x ambig, output head feats (pers (2) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule1B with Rule2A:
(remove_morpher_rule message Rule1B)
(load_morpher_rule message
  <mrule  nm Rule2A
		  str morphophonemic
		  r_hf (pers (2))
		  hf (pers (3))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 2x ambig, output head feats (pers (3) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule2A with Rule2B:
(remove_morpher_rule message Rule2A)
(load_morpher_rule message
  <mrule  nm Rule2B
		  str morphophonemic
		  r_hf (pers (2 3))
		  hf (pers (3))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 4x ambig, output head feats (pers (3) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule2B with Rule3:
(remove_morpher_rule message Rule2B)
(load_morpher_rule message
  <mrule  nm Rule3
		  str morphophonemic
		  r_hf (pers (4))
		  hf (pers (3))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 1x ambig, output head feats (pers (3) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule3 with Rule4A:
(remove_morpher_rule message Rule3)
(load_morpher_rule message
  <mrule  nm Rule4A
		  str morphophonemic
		  r_hf (pers (2))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 2x ambig, output head feats (pers (2) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Replace Rule4A with Rule4B:
(remove_morpher_rule message Rule4A)
(load_morpher_rule message
  <mrule  nm Rule4B
		  str morphophonemic
		  r_hf (pers (2 3))
		  gl 3SG
		  subrules (<msub
					  in <m_lhs pseq ((<opt_seq min 1 max -1 seq (<simp_cntxt class null>)>))>
					  out <m_rhs p_out (1 (z table3))>
					>
				  )
	>
)
;Morph, expect 4x ambig, output two answers with head feats (pers (2 3) num (pl))
; and two with  (pers (3) num (pl)):
(morph_and_lookup_word pretty_print ssagz)

;Remove the last rule:
(remove_morpher_rule message Rule4B)
;And the natural classes (msg 6542):
(remove_nat_class message null)
